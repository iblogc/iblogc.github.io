{"title":"Django内置的flatpages应用","slug":"django内置的flatpages应用","date":"2015-09-08T13:17:55.000Z","updated":"2015-09-08T13:17:55.000Z","comments":true,"path":"api/articles/django内置的flatpages应用.json","excerpt":"true","covers":null,"content":"<p>不知道大家平时写网站时类似「关于页面」，「用户协议」这类页面是如何处理的。这里列出了这类页面的两个特点：</p>\n<ol>\n<li>页面数据简单（不会有很多动态数据展示）;</li>\n<li>有更新但频率不高;</li>\n</ol>\n<p>如果要为这类页面展示建立多个数据表，显然是很浪费的行为，但如果直接写成静态页面文件，更新又比较很麻烦，这时候就可以使用<code>flatpages</code>来解决这类问题了。<br><!--more--></p>\n<p><code>django.contrib.flatpages</code>是<code>Django</code>的内置app，用于添加更新的一些简单的页面，具体设置，请继续查看以下步骤。</p>\n<h2 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h2><p>首先确保<code>INSTALLED_APPS</code>中已经存在<code>django.contrib.sites</code>，因为<code>django.contrib.flatpages</code>依赖于此包。<br><code>settings.py</code><br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">INSTALLED_APPS = (</span><br><span class=\"line\">    <span class=\"comment\"># ...</span></span><br><span class=\"line\">    <span class=\"string\">&#x27;django.contrib.sites&#x27;</span>,</span><br><span class=\"line\">    <span class=\"string\">&#x27;django.contrib.flatpages&#x27;</span>,</span><br><span class=\"line\">)</span><br><span class=\"line\"><span class=\"comment\"># ...</span></span><br><span class=\"line\"><span class=\"comment\"># 如果没有设置`SITE_ID`值，则需要设置，这里直接设置为1</span></span><br><span class=\"line\">SITE_ID = <span class=\"number\">1</span></span><br></pre></td></tr></table></figure><br>执行<code>python manage.py migrate</code>建表</p>\n<h2 id=\"配置\"><a href=\"#配置\" class=\"headerlink\" title=\"配置\"></a>配置</h2><p>路由配置可先以有多种形式<br><code>urls.py</code><br>第一种（需放在最后，推荐）<br><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">from django.contrib.flatpages import views</span><br><span class=\"line\">urlpatterns += [</span><br><span class=\"line\">    url(r&#x27;^(?P&lt;url&gt;.*/)$&#x27;, views.flatpage),</span><br><span class=\"line\">]</span><br></pre></td></tr></table></figure><br>第二种（每个页面都需要写一个url，推荐）<br><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">from django.contrib.flatpages import views</span><br><span class=\"line\">urlpatterns = [</span><br><span class=\"line\">    url(r&#x27;^about-us/$&#x27;, views.flatpage, &#123;&#x27;url&#x27;: &#x27;/about-us/&#x27;&#125;, name=&#x27;about&#x27;),</span><br><span class=\"line\">    url(r&#x27;^license/$&#x27;, views.flatpage, &#123;&#x27;url&#x27;: &#x27;/license/&#x27;&#125;, name=&#x27;license&#x27;),</span><br><span class=\"line\">]</span><br></pre></td></tr></table></figure><br>或者，如果你不想配置路由，还有一种更简单的方法，直接在<code>settings.py</code>的里添加中间件<br><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">MIDDLEWARE_CLASSES = (</span><br><span class=\"line\">    # ...</span><br><span class=\"line\">    &#x27;django.contrib.flatpages.middleware.FlatpageFallbackMiddleware&#x27;,</span><br><span class=\"line\">)</span><br></pre></td></tr></table></figure><br><em>为确保配置生效，保险的方法是把<code>django.contrib.flatpages.middleware.FlatpageFallbackMiddleware</code>放在最后一行</em></p>\n<h2 id=\"管理flatpages\"><a href=\"#管理flatpages\" class=\"headerlink\" title=\"管理flatpages\"></a>管理<code>flatpages</code></h2><p>默认的你可以登录超级管理员后台（如果开启），找到<code>Flat pages</code>，进去点击添加，可以看到可配置的选项有，<code>URL</code> <code>Title</code> <code>Content</code> <code>Site</code> <code>Enable comments</code> <code>Registration required</code> <code>Template name</code></p>\n<h3 id=\"数据项说明\"><a href=\"#数据项说明\" class=\"headerlink\" title=\"数据项说明\"></a>数据项说明</h3><ul>\n<li><code>URL</code>:  页面所处的 URL，不包括域名，但是包含前导斜杠 (例如 /about/contact/ )</li>\n<li><code>Title</code>: 页面的标题，框架不对它作任何特殊处理。由你通过模板来显示它</li>\n<li><code>Content</code>: 页面的内容 (即 HTML 页面)，框架不会对它作任何特别处理。由你负责使用模板来显示</li>\n<li><code>Site</code>: 页面放置的站点，该项设置集成了 Django 多站点框架</li>\n<li><code>Enable comments</code>: 是否允许该简单页面使用评论，框架不对此做任何特别处理。你可在模板中检查该值并根据需要显示评论窗体</li>\n<li><code>Registration required</code>: 是否注册用户才能查看此简单页面，该设置项集成了 Djangos 验证/用户框架，该框架于第十二章详述。</li>\n<li><code>Template name</code>: 用来解析该简单页面的模板名称，这是一个可选项，如果未指定模板或该模板不存在，系统会退而使用默认模板 <code>flatpages/default.html</code>（我在<code>Django1.8.4</code>里死活没找到，只好自己写好一个扔进去）</li>\n</ul>\n<p>当添加相应的数据后，剩下工作就交给<code>flatpages</code>吧，如果你是使用中间件形式的，则<code>flatpages</code>会在配置完所有<code>urls.py</code>后，没有找到配置到对应的<code>URL</code>，才会到<code>flatpages</code>中查找，如果还是找不到，则会引发<code>Http404</code>异常，即<code>FlatpageFallbackMiddleware</code>只在<code>404</code>时会被激活，而不会在<code>500</code>或其它错误响应时被激活。</p>\n<p>如果你需要自己定制，则可以针对<code>django/contrib/flatpages/models.py</code>自己写增删改方法就可以。<br><code>models.py</code><br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">FlatPage</span>(models.Model):</span><br><span class=\"line\">    url = models.CharField(_(<span class=\"string\">&#x27;URL&#x27;</span>), max_length=<span class=\"number\">100</span>, db_index=<span class=\"literal\">True</span>)</span><br><span class=\"line\">    title = models.CharField(_(<span class=\"string\">&#x27;title&#x27;</span>), max_length=<span class=\"number\">200</span>)</span><br><span class=\"line\">    content = models.TextField(_(<span class=\"string\">&#x27;content&#x27;</span>), blank=<span class=\"literal\">True</span>)</span><br><span class=\"line\">    enable_comments = models.BooleanField(_(<span class=\"string\">&#x27;enable comments&#x27;</span>), default=<span class=\"literal\">False</span>)</span><br><span class=\"line\">    template_name = models.CharField(_(<span class=\"string\">&#x27;template name&#x27;</span>), max_length=<span class=\"number\">70</span>, blank=<span class=\"literal\">True</span>,</span><br><span class=\"line\">        help_text=_(</span><br><span class=\"line\">            <span class=\"string\">&quot;Example: &#x27;flatpages/contact_page.html&#x27;. If this isn&#x27;t provided, &quot;</span></span><br><span class=\"line\">            <span class=\"string\">&quot;the system will use &#x27;flatpages/default.html&#x27;.&quot;</span></span><br><span class=\"line\">        ),</span><br><span class=\"line\">    )</span><br><span class=\"line\">    registration_required = models.BooleanField(_(<span class=\"string\">&#x27;registration required&#x27;</span>),</span><br><span class=\"line\">        help_text=_(<span class=\"string\">&quot;If this is checked, only logged-in users will be able to view the page.&quot;</span>),</span><br><span class=\"line\">        default=<span class=\"literal\">False</span>)</span><br><span class=\"line\">    sites = models.ManyToManyField(Site)</span><br><span class=\"line\"> </span><br><span class=\"line\">    <span class=\"keyword\">class</span> <span class=\"title class_\">Meta</span>:</span><br><span class=\"line\">        db_table = <span class=\"string\">&#x27;django_flatpage&#x27;</span></span><br><span class=\"line\">        verbose_name = _(<span class=\"string\">&#x27;flat page&#x27;</span>)</span><br><span class=\"line\">        verbose_name_plural = _(<span class=\"string\">&#x27;flat pages&#x27;</span>)</span><br><span class=\"line\">        ordering = (<span class=\"string\">&#x27;url&#x27;</span>,)</span><br><span class=\"line\"> </span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">__str__</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">&quot;%s -- %s&quot;</span> % (self.url, self.title)</span><br><span class=\"line\"> </span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">get_absolute_url</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">        <span class=\"comment\"># Handle script prefix manually because we bypass reverse()</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> iri_to_uri(get_script_prefix().rstrip(<span class=\"string\">&#x27;/&#x27;</span>) + self.url)</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"模板\"><a href=\"#模板\" class=\"headerlink\" title=\"模板\"></a>模板</h2><p>默认模板路径为<code>flatpages/default.html</code><br><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>&#123;&#123; flatpage.title &#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">&#123;&#123; flatpage.content &#125;&#125;</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure></p>\n<blockquote>\n<p>在实际应用中，我们不太可能会使用默认的模板，你可能需要自己写一个漂亮模板，比如有一个头部和底部，头部可能还需要添加<code>requeset.user</code>显示用户信息等。</p>\n</blockquote>\n<h2 id=\"高级应用\"><a href=\"#高级应用\" class=\"headerlink\" title=\"高级应用\"></a>高级应用</h2><p>获取<code>flatpages</code>实例列表<br><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% load flatpages %&#125;</span><br><span class=\"line\">&#123;% get_flatpages as flatpages %&#125;</span><br></pre></td></tr></table></figure></p>\n<p>获取当前用户能打开的<code>flatpages</code>实例列表<br><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% load flatpages %&#125;</span><br><span class=\"line\">&#123;% get_flatpages for request.user as about_pages %&#125;</span><br></pre></td></tr></table></figure></p>\n<p>获取链接以<code>/about/</code>为开头的<code>flatpages</code>实例列表<br><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% load flatpages %&#125;</span><br><span class=\"line\">&#123;% get_flatpages &#x27;/about/&#x27; as about_pages %&#125;</span><br></pre></td></tr></table></figure></p>\n<p>上面两种也可以组合使用<br><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% load flatpages %&#125;</span><br><span class=\"line\">&#123;% get_flatpages &#x27;/about/&#x27; for someuser as about_pages %&#125;</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"生成sitemaps-xml\"><a href=\"#生成sitemaps-xml\" class=\"headerlink\" title=\"生成sitemaps.xml\"></a>生成<code>sitemaps.xml</code></h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">from django.conf.urls import url</span><br><span class=\"line\">from django.contrib.flatpages.sitemaps import FlatPageSitemap</span><br><span class=\"line\">from django.contrib.sitemaps.views import sitemap</span><br><span class=\"line\"> </span><br><span class=\"line\">urlpatterns = [</span><br><span class=\"line\">    # ...</span><br><span class=\"line\"> </span><br><span class=\"line\">    # the sitemap</span><br><span class=\"line\">    url(r&#x27;^sitemap\\.xml$&#x27;, sitemap,</span><br><span class=\"line\">        &#123;&#x27;sitemaps&#x27;: &#123;&#x27;flatpages&#x27;: FlatPageSitemap&#125;&#125;,</span><br><span class=\"line\">        name=&#x27;django.contrib.sitemaps.views.sitemap&#x27;),</span><br><span class=\"line\">]</span><br></pre></td></tr></table></figure>\n<h2 id=\"容易踩的坑\"><a href=\"#容易踩的坑\" class=\"headerlink\" title=\"容易踩的坑\"></a>容易踩的坑</h2><p>最好把<code>settings.py</code>里的<code>APPEND_SLASH</code>设置为<code>Ture</code>， 这样不管是<code>/about-us</code>还是<code>/about-us/</code>都可以访问到。</p>\n<h2 id=\"参考资料\"><a href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"></a>参考资料</h2><ul>\n<li><a href=\"https://docs.djangoproject.com/en/1.8/ref/contrib/flatpages/\">https://docs.djangoproject.com/en/1.8/ref/contrib/flatpages/</a></li>\n<li><a href=\"http://djangobook.py3k.cn/2.0/chapter16/\">http://djangobook.py3k.cn/2.0/chapter16/</a></li>\n</ul>\n","more":"<p>不知道大家平时写网站时类似「关于页面」，「用户协议」这类页面是如何处理的。这里列出了这类页面的两个特点：</p>\n<ol>\n<li>页面数据简单（不会有很多动态数据展示）;</li>\n<li>有更新但频率不高;</li>\n</ol>\n<p>如果要为这类页面展示建立多个数据表，显然是很浪费的行为，但如果直接写成静态页面文件，更新又比较很麻烦，这时候就可以使用<code>flatpages</code>来解决这类问题了。<br><!--more--></p>\n<p><code>django.contrib.flatpages</code>是<code>Django</code>的内置app，用于添加更新的一些简单的页面，具体设置，请继续查看以下步骤。</p>\n<h2 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h2><p>首先确保<code>INSTALLED_APPS</code>中已经存在<code>django.contrib.sites</code>，因为<code>django.contrib.flatpages</code>依赖于此包。<br><code>settings.py</code><br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">INSTALLED_APPS = (</span><br><span class=\"line\">    <span class=\"comment\"># ...</span></span><br><span class=\"line\">    <span class=\"string\">&#x27;django.contrib.sites&#x27;</span>,</span><br><span class=\"line\">    <span class=\"string\">&#x27;django.contrib.flatpages&#x27;</span>,</span><br><span class=\"line\">)</span><br><span class=\"line\"><span class=\"comment\"># ...</span></span><br><span class=\"line\"><span class=\"comment\"># 如果没有设置`SITE_ID`值，则需要设置，这里直接设置为1</span></span><br><span class=\"line\">SITE_ID = <span class=\"number\">1</span></span><br></pre></td></tr></table></figure><br>执行<code>python manage.py migrate</code>建表</p>\n<h2 id=\"配置\"><a href=\"#配置\" class=\"headerlink\" title=\"配置\"></a>配置</h2><p>路由配置可先以有多种形式<br><code>urls.py</code><br>第一种（需放在最后，推荐）<br><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">from django.contrib.flatpages import views</span><br><span class=\"line\">urlpatterns += [</span><br><span class=\"line\">    url(r&#x27;^(?P&lt;url&gt;.*/)$&#x27;, views.flatpage),</span><br><span class=\"line\">]</span><br></pre></td></tr></table></figure><br>第二种（每个页面都需要写一个url，推荐）<br><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">from django.contrib.flatpages import views</span><br><span class=\"line\">urlpatterns = [</span><br><span class=\"line\">    url(r&#x27;^about-us/$&#x27;, views.flatpage, &#123;&#x27;url&#x27;: &#x27;/about-us/&#x27;&#125;, name=&#x27;about&#x27;),</span><br><span class=\"line\">    url(r&#x27;^license/$&#x27;, views.flatpage, &#123;&#x27;url&#x27;: &#x27;/license/&#x27;&#125;, name=&#x27;license&#x27;),</span><br><span class=\"line\">]</span><br></pre></td></tr></table></figure><br>或者，如果你不想配置路由，还有一种更简单的方法，直接在<code>settings.py</code>的里添加中间件<br><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">MIDDLEWARE_CLASSES = (</span><br><span class=\"line\">    # ...</span><br><span class=\"line\">    &#x27;django.contrib.flatpages.middleware.FlatpageFallbackMiddleware&#x27;,</span><br><span class=\"line\">)</span><br></pre></td></tr></table></figure><br><em>为确保配置生效，保险的方法是把<code>django.contrib.flatpages.middleware.FlatpageFallbackMiddleware</code>放在最后一行</em></p>\n<h2 id=\"管理flatpages\"><a href=\"#管理flatpages\" class=\"headerlink\" title=\"管理flatpages\"></a>管理<code>flatpages</code></h2><p>默认的你可以登录超级管理员后台（如果开启），找到<code>Flat pages</code>，进去点击添加，可以看到可配置的选项有，<code>URL</code> <code>Title</code> <code>Content</code> <code>Site</code> <code>Enable comments</code> <code>Registration required</code> <code>Template name</code></p>\n<h3 id=\"数据项说明\"><a href=\"#数据项说明\" class=\"headerlink\" title=\"数据项说明\"></a>数据项说明</h3><ul>\n<li><code>URL</code>:  页面所处的 URL，不包括域名，但是包含前导斜杠 (例如 /about/contact/ )</li>\n<li><code>Title</code>: 页面的标题，框架不对它作任何特殊处理。由你通过模板来显示它</li>\n<li><code>Content</code>: 页面的内容 (即 HTML 页面)，框架不会对它作任何特别处理。由你负责使用模板来显示</li>\n<li><code>Site</code>: 页面放置的站点，该项设置集成了 Django 多站点框架</li>\n<li><code>Enable comments</code>: 是否允许该简单页面使用评论，框架不对此做任何特别处理。你可在模板中检查该值并根据需要显示评论窗体</li>\n<li><code>Registration required</code>: 是否注册用户才能查看此简单页面，该设置项集成了 Djangos 验证/用户框架，该框架于第十二章详述。</li>\n<li><code>Template name</code>: 用来解析该简单页面的模板名称，这是一个可选项，如果未指定模板或该模板不存在，系统会退而使用默认模板 <code>flatpages/default.html</code>（我在<code>Django1.8.4</code>里死活没找到，只好自己写好一个扔进去）</li>\n</ul>\n<p>当添加相应的数据后，剩下工作就交给<code>flatpages</code>吧，如果你是使用中间件形式的，则<code>flatpages</code>会在配置完所有<code>urls.py</code>后，没有找到配置到对应的<code>URL</code>，才会到<code>flatpages</code>中查找，如果还是找不到，则会引发<code>Http404</code>异常，即<code>FlatpageFallbackMiddleware</code>只在<code>404</code>时会被激活，而不会在<code>500</code>或其它错误响应时被激活。</p>\n<p>如果你需要自己定制，则可以针对<code>django/contrib/flatpages/models.py</code>自己写增删改方法就可以。<br><code>models.py</code><br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">FlatPage</span>(models.Model):</span><br><span class=\"line\">    url = models.CharField(_(<span class=\"string\">&#x27;URL&#x27;</span>), max_length=<span class=\"number\">100</span>, db_index=<span class=\"literal\">True</span>)</span><br><span class=\"line\">    title = models.CharField(_(<span class=\"string\">&#x27;title&#x27;</span>), max_length=<span class=\"number\">200</span>)</span><br><span class=\"line\">    content = models.TextField(_(<span class=\"string\">&#x27;content&#x27;</span>), blank=<span class=\"literal\">True</span>)</span><br><span class=\"line\">    enable_comments = models.BooleanField(_(<span class=\"string\">&#x27;enable comments&#x27;</span>), default=<span class=\"literal\">False</span>)</span><br><span class=\"line\">    template_name = models.CharField(_(<span class=\"string\">&#x27;template name&#x27;</span>), max_length=<span class=\"number\">70</span>, blank=<span class=\"literal\">True</span>,</span><br><span class=\"line\">        help_text=_(</span><br><span class=\"line\">            <span class=\"string\">&quot;Example: &#x27;flatpages/contact_page.html&#x27;. If this isn&#x27;t provided, &quot;</span></span><br><span class=\"line\">            <span class=\"string\">&quot;the system will use &#x27;flatpages/default.html&#x27;.&quot;</span></span><br><span class=\"line\">        ),</span><br><span class=\"line\">    )</span><br><span class=\"line\">    registration_required = models.BooleanField(_(<span class=\"string\">&#x27;registration required&#x27;</span>),</span><br><span class=\"line\">        help_text=_(<span class=\"string\">&quot;If this is checked, only logged-in users will be able to view the page.&quot;</span>),</span><br><span class=\"line\">        default=<span class=\"literal\">False</span>)</span><br><span class=\"line\">    sites = models.ManyToManyField(Site)</span><br><span class=\"line\"> </span><br><span class=\"line\">    <span class=\"keyword\">class</span> <span class=\"title class_\">Meta</span>:</span><br><span class=\"line\">        db_table = <span class=\"string\">&#x27;django_flatpage&#x27;</span></span><br><span class=\"line\">        verbose_name = _(<span class=\"string\">&#x27;flat page&#x27;</span>)</span><br><span class=\"line\">        verbose_name_plural = _(<span class=\"string\">&#x27;flat pages&#x27;</span>)</span><br><span class=\"line\">        ordering = (<span class=\"string\">&#x27;url&#x27;</span>,)</span><br><span class=\"line\"> </span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">__str__</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">&quot;%s -- %s&quot;</span> % (self.url, self.title)</span><br><span class=\"line\"> </span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">get_absolute_url</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">        <span class=\"comment\"># Handle script prefix manually because we bypass reverse()</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> iri_to_uri(get_script_prefix().rstrip(<span class=\"string\">&#x27;/&#x27;</span>) + self.url)</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"模板\"><a href=\"#模板\" class=\"headerlink\" title=\"模板\"></a>模板</h2><p>默认模板路径为<code>flatpages/default.html</code><br><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>&#123;&#123; flatpage.title &#125;&#125;<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">&#123;&#123; flatpage.content &#125;&#125;</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure></p>\n<blockquote>\n<p>在实际应用中，我们不太可能会使用默认的模板，你可能需要自己写一个漂亮模板，比如有一个头部和底部，头部可能还需要添加<code>requeset.user</code>显示用户信息等。</p>\n</blockquote>\n<h2 id=\"高级应用\"><a href=\"#高级应用\" class=\"headerlink\" title=\"高级应用\"></a>高级应用</h2><p>获取<code>flatpages</code>实例列表<br><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% load flatpages %&#125;</span><br><span class=\"line\">&#123;% get_flatpages as flatpages %&#125;</span><br></pre></td></tr></table></figure></p>\n<p>获取当前用户能打开的<code>flatpages</code>实例列表<br><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% load flatpages %&#125;</span><br><span class=\"line\">&#123;% get_flatpages for request.user as about_pages %&#125;</span><br></pre></td></tr></table></figure></p>\n<p>获取链接以<code>/about/</code>为开头的<code>flatpages</code>实例列表<br><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% load flatpages %&#125;</span><br><span class=\"line\">&#123;% get_flatpages &#x27;/about/&#x27; as about_pages %&#125;</span><br></pre></td></tr></table></figure></p>\n<p>上面两种也可以组合使用<br><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% load flatpages %&#125;</span><br><span class=\"line\">&#123;% get_flatpages &#x27;/about/&#x27; for someuser as about_pages %&#125;</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"生成sitemaps-xml\"><a href=\"#生成sitemaps-xml\" class=\"headerlink\" title=\"生成sitemaps.xml\"></a>生成<code>sitemaps.xml</code></h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">from django.conf.urls import url</span><br><span class=\"line\">from django.contrib.flatpages.sitemaps import FlatPageSitemap</span><br><span class=\"line\">from django.contrib.sitemaps.views import sitemap</span><br><span class=\"line\"> </span><br><span class=\"line\">urlpatterns = [</span><br><span class=\"line\">    # ...</span><br><span class=\"line\"> </span><br><span class=\"line\">    # the sitemap</span><br><span class=\"line\">    url(r&#x27;^sitemap\\.xml$&#x27;, sitemap,</span><br><span class=\"line\">        &#123;&#x27;sitemaps&#x27;: &#123;&#x27;flatpages&#x27;: FlatPageSitemap&#125;&#125;,</span><br><span class=\"line\">        name=&#x27;django.contrib.sitemaps.views.sitemap&#x27;),</span><br><span class=\"line\">]</span><br></pre></td></tr></table></figure>\n<h2 id=\"容易踩的坑\"><a href=\"#容易踩的坑\" class=\"headerlink\" title=\"容易踩的坑\"></a>容易踩的坑</h2><p>最好把<code>settings.py</code>里的<code>APPEND_SLASH</code>设置为<code>Ture</code>， 这样不管是<code>/about-us</code>还是<code>/about-us/</code>都可以访问到。</p>\n<h2 id=\"参考资料\"><a href=\"#参考资料\" class=\"headerlink\" title=\"参考资料\"></a>参考资料</h2><ul>\n<li><a href=\"https://docs.djangoproject.com/en/1.8/ref/contrib/flatpages/\">https://docs.djangoproject.com/en/1.8/ref/contrib/flatpages/</a></li>\n<li><a href=\"http://djangobook.py3k.cn/2.0/chapter16/\">http://djangobook.py3k.cn/2.0/chapter16/</a></li>\n</ul>\n","categories":[{"name":"程序猿","path":"api/categories/程序猿.json"}],"tags":[{"name":"Python","path":"api/tags/Python.json"},{"name":"Django","path":"api/tags/Django.json"}]}