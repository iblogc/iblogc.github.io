{"name":"Reactive","postlist":[{"title":"SpringWebFlux使用笔记","slug":"SpringWebFlux","date":"2019-02-28T05:32:59.000Z","updated":"2020-08-15T03:07:21.989Z","comments":true,"path":"api/articles/SpringWebFlux.json","excerpt":"记录使用SpringWebFlux的一些笔记。","cover":null,"content":"<p>记录使用SpringWebFlux的一些笔记。</p>\n<a id=\"more\"></a>\n<h2 id=\"groupBy\"><a href=\"#groupBy\" class=\"headerlink\" title=\"groupBy\"></a>groupBy</h2><p>对flux进行分组。<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">channelOnlineCityBoFlux.sort((s1, s2) -&gt; Objects.requireNonNull(s1.getInitial()).compareTo(s2.getInitial()))</span><br><span class=\"line\">  .groupBy(city -&gt; city.getInitial().substring(<span class=\"number\">0</span>, <span class=\"number\">1</span>).toUpperCase())</span><br><span class=\"line\">  .sort((s1, s2) -&gt; Objects.requireNonNull(s1.key()).compareTo(s2.key()))</span><br><span class=\"line\">  .flatMap(gf -&gt; gf.collectList()</span><br><span class=\"line\">          .map(cityList -&gt; &#123;</span><br><span class=\"line\">              ChannelOnlineCityGroupByPinYinBo cityGroupByPinYinBo = <span class=\"keyword\">new</span> ChannelOnlineCityGroupByPinYinBo();</span><br><span class=\"line\">              cityGroupByPinYinBo.setLetter(gf.key());</span><br><span class=\"line\">              cityGroupByPinYinBo.setCities(cityList);</span><br><span class=\"line\">              <span class=\"keyword\">return</span> cityGroupByPinYinBo;</span><br><span class=\"line\">          &#125;));</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"handle\"><a href=\"#handle\" class=\"headerlink\" title=\"handle\"></a>handle</h2><p>handle作用相当于是filter和map的组合。</p>\n<iframe src=\"https://carbon.now.sh/embed/?bg=rgba(171%2C184%2C195%2C100)&t=dracula&wt=none&l=text%2Fx-java&ds=true&dsyoff=20px&dsblur=68px&wc=true&wa=true&pv=48px&ph=32px&ln=false&fm=Hack&fs=13px&lh=133%25&si=false&code=public%2520static%2520String%2520alphabet(int%2520letterNumber)%2520%257B%250A%2520%2520%2520%2520%2520%2520%2520%2520if%2520(letterNumber%2520%253C%25201%2520%257C%257C%2520letterNumber%2520%253E%252026)%2520%257B%250A%2520%2520%2520%2520%2520%2520%2520%2520%2520%2520%2520%2520return%2520null%253B%250A%2520%2520%2520%2520%2520%2520%2520%2520%257D%250A%2520%2520%2520%2520%2520%2520%2520%2520int%2520letterIndexAscii%2520%253D%2520'A'%2520%252B%2520letterNumber%2520-%25201%253B%250A%2520%2520%2520%2520%2520%2520%2520%2520return%2520%2522%2522%2520%252B%2520(char)%2520letterIndexAscii%253B%250A%2520%2520%2520%2520%257D%250A%250A%250Apublic%2520static%2520void%2520main(String%255B%255D%2520args)%2520%257B%250A%250A%2520%2520%2520%2520%2520%2520%2520%2520%252F%252F%2520%25E5%2586%2599%25E6%25B3%25951%250A%2520%2520%2520%2520%2520%2520%2520%2520Flux%253CString%253E%2520alphabet%2520%253D%2520Flux.just(-1%252C%252030%252C%252013%252C%25209%252C%252020)%250A%2520%2520%2520%2520%2520%2520%2520%2520%2520%2520%2520%2520%2520%2520%2520%2520.handle((i%252C%2520sink)%2520-%253E%2520%257B%250A%2520%2520%2520%2520%2520%2520%2520%2520%2520%2520%2520%2520%2520%2520%2520%2520%2520%2520%2520%2520String%2520letter%2520%253D%2520alphabet(i)%253B%250A%2520%2520%2520%2520%2520%2520%2520%2520%2520%2520%2520%2520%2520%2520%2520%2520%2520%2520%2520%2520if%2520(letter%2520!%253D%2520null)%250A%2520%2520%2520%2520%2520%2520%2520%2520%2520%2520%2520%2520%2520%2520%2520%2520%2520%2520%2520%2520%2520%2520%2520%2520sink.next(letter)%253B%250A%2520%2520%2520%2520%2520%2520%2520%2520%2520%2520%2520%2520%2520%2520%2520%2520%257D)%253B%250A%2520%2520%2520%2520%2520%2520%2520%2520alphabet.map(a%2520-%253E%2520a.toLowerCase())%250A%2520%2520%2520%2520%2520%2520%2520%2520%2520%2520%2520%2520%2520%2520%2520%2520.subscribe(System.out%253A%253Aprintln)%253B%250A%250A%2520%2520%2520%2520%2520%2520%2520%2520%252F%252F%2520%25E5%2586%2599%25E6%25B3%25952%250A%2520%2520%2520%2520%2520%2520%2520%2520Flux.just(-1%252C%252030%252C%252013%252C%25209%252C%252020)%250A%2520%2520%2520%2520%2520%2520%2520%2520%2520%2520%2520%2520%2520%2520%2520%2520.handle((i%252C%2520sink)%2520-%253E%2520%257B%250A%2520%2520%2520%2520%2520%2520%2520%2520%2520%2520%2520%2520%2520%2520%2520%2520%2520%2520%2520%2520String%2520letter%2520%253D%2520alphabet(i)%253B%250A%2520%2520%2520%2520%2520%2520%2520%2520%2520%2520%2520%2520%2520%2520%2520%2520%2520%2520%2520%2520if%2520(letter%2520!%253D%2520null)%250A%2520%2520%2520%2520%2520%2520%2520%2520%2520%2520%2520%2520%2520%2520%2520%2520%2520%2520%2520%2520%2520%2520%2520%2520sink.next(letter)%253B%250A%2520%2520%2520%2520%2520%2520%2520%2520%2520%2520%2520%2520%2520%2520%2520%2520%257D)%250A%2520%2520%2520%2520%2520%2520%2520%2520%2520%2520%2520%2520%2520%2520%2520%2520%252F%252F%2520%25E8%25BF%2599%25E9%2587%258C%25E9%259C%2580%25E8%25A6%2581%25E5%2581%259A%25E4%25B8%2580%25E6%25AC%25A1%25E5%25BC%25BA%25E5%2588%25B6%25E7%25B1%25BB%25E5%259E%258B%25E8%25BD%25AC%25E6%258D%25A2%250A%2520%2520%2520%2520%2520%2520%2520%2520%2520%2520%2520%2520%2520%2520%2520%2520.map(a%2520-%253E%2520(String)%2520a)%250A%2520%2520%2520%2520%2520%2520%2520%2520%2520%2520%2520%2520%2520%2520%2520%2520.map(sa%2520-%253E%2520sa.toLowerCase())%250A%2520%2520%2520%2520%2520%2520%2520%2520%2520%2520%2520%2520%2520%2520%2520%2520.subscribe(System.out%253A%253Aprintln)%253B%250A%250A%2520%2520%2520%2520%257D&es=2x&wm=false\" style=\"transform:scale(1); width:600px; height:800px; border:0; overflow:hidden;\" sandbox=\"allow-scripts allow-same-origin\"><br></iframe>","raw":null,"categories":[{"name":"程序猿","path":"api/categories/程序猿.json"}],"tags":[{"name":"Java","path":"api/tags/Java.json"},{"name":"Reactive","path":"api/tags/Reactive.json"}]},{"title":"WebFlux中mongo操作-Aggregation","slug":"WebFlux中mongo操作-Aggregation","date":"2020-01-17T07:12:53.000Z","updated":"2020-01-17T08:01:32.735Z","comments":true,"path":"api/articles/WebFlux中mongo操作-Aggregation.json","excerpt":"<br><br>","cover":null,"content":"<p><br><br><a id=\"more\"></a></p>\n<p>switch</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ConditionalOperators.Switch.CaseOperator cond = ConditionalOperators.Switch.CaseOperator.when(</span><br><span class=\"line\">                BooleanOperators.And.and(</span><br><span class=\"line\">                        ComparisonOperators.Eq.valueOf(<span class=\"string\">\"channelBillStatus1\"</span>).equalToValue(<span class=\"string\">\"已结算\"</span>),</span><br><span class=\"line\">                        ComparisonOperators.Eq.valueOf(<span class=\"string\">\"channelBillStatus2\"</span>).equalToValue(<span class=\"string\">\"已结算\"</span>)</span><br><span class=\"line\">                )</span><br><span class=\"line\">        ).then(<span class=\"string\">\"已结清\"</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        Aggregation aggregation = Aggregation.newAggregation(</span><br><span class=\"line\">                Aggregation.project(<span class=\"string\">\"channelBillStatus1\"</span>, <span class=\"string\">\"channelBillStatus2\"</span>)</span><br><span class=\"line\">                        .and(ConditionalOperators.switchCases(cond).defaultTo(<span class=\"string\">\"未结清\"</span>)).as(<span class=\"string\">\"channelBillStatus\"</span>)</span><br><span class=\"line\">        );</span><br><span class=\"line\">        </span><br><span class=\"line\">        reactiveMongoTemplate.aggregate(aggregation, PlatformBillItem.class, PlatformBillBo.class);</span><br></pre></td></tr></table></figure>\n<p>lookup及id类型转换</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//把_id转成String并赋值给id</span></span><br><span class=\"line\">        Aggregation.project(<span class=\"string\">\"internalId\"</span>, <span class=\"string\">\"name\"</span>, <span class=\"string\">\"isAvailable\"</span>, <span class=\"string\">\"isCanAdd\"</span>, <span class=\"string\">\"fitGender\"</span>, <span class=\"string\">\"fitAge\"</span>, <span class=\"string\">\"fitMaritalStatus\"</span>, <span class=\"string\">\"price\"</span>, <span class=\"string\">\"sortNo\"</span>, <span class=\"string\">\"createdAt\"</span>)</span><br><span class=\"line\">          \t\t\t<span class=\"comment\">//如果需要把String转Object使用ConvertOperators.ToObjectId.toObjectId()</span></span><br><span class=\"line\">                .and(ConvertOperators.ToString.toString(<span class=\"string\">\"$_id\"</span>)).as(<span class=\"string\">\"id\"</span>);</span><br><span class=\"line\">        <span class=\"comment\">//用当前表的id值去匹配chn_section表的sectionId字段值，并把结果存入chnSections数组</span></span><br><span class=\"line\">        Aggregation.lookup(<span class=\"string\">\"chn_section\"</span>, <span class=\"string\">\"id\"</span>, <span class=\"string\">\"sectionId\"</span>, <span class=\"string\">\"chnSections\"</span>);</span><br><span class=\"line\">        <span class=\"comment\">//如有需要，把chnSections数组拆出来，chnSections数组有几个元素，当前这条数据就会被拆成多少条，chnSections值会变成元素值而不再是原来的数组</span></span><br><span class=\"line\">        <span class=\"comment\">//如果chnSections数组无值，默认会丢弃这条数据，如果要保留设置preserveNullAndEmptyArrays=true</span></span><br><span class=\"line\">        Aggregation.unwind(<span class=\"string\">\"chnSection\"</span>, <span class=\"keyword\">true</span>);</span><br><span class=\"line\">        <span class=\"comment\">//只输出这些字段</span></span><br><span class=\"line\">        Aggregation.project(<span class=\"string\">\"internalId\"</span>, <span class=\"string\">\"name\"</span>, <span class=\"string\">\"isAvailable\"</span>, <span class=\"string\">\"isCanAdd\"</span>, <span class=\"string\">\"fitGender\"</span>, <span class=\"string\">\"fitAge\"</span>, <span class=\"string\">\"fitMaritalStatus\"</span>, <span class=\"string\">\"price\"</span>, <span class=\"string\">\"sortNo\"</span>, <span class=\"string\">\"createdAt\"</span>, <span class=\"string\">\"chnSections\"</span>);</span><br><span class=\"line\">        reactiveMongoTemplate.aggregate(aggregation, PlatformBillItem.class, PlatformBillBo.class);</span><br></pre></td></tr></table></figure>\n<p>如果lookup时，如果要对匹配的数据进行筛选（参考链接：<a href=\"https://stackoverflow.com/questions/51107626/spring-data-mongodb-lookup-with-pipeline-aggregation）\" target=\"_blank\" rel=\"noopener\">https://stackoverflow.com/questions/51107626/spring-data-mongodb-lookup-with-pipeline-aggregation）</a></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//原始mongo</span></span><br><span class=\"line\"><span class=\"comment\">//&#123;</span></span><br><span class=\"line\"><span class=\"comment\">//   $lookup:</span></span><br><span class=\"line\"><span class=\"comment\">//     &#123;</span></span><br><span class=\"line\"><span class=\"comment\">//       from: &lt;collection to join&gt;,</span></span><br><span class=\"line\"><span class=\"comment\">//       let: &#123; &lt;var_1&gt;: &lt;expression&gt;, …, &lt;var_n&gt;: &lt;expression&gt; &#125;,</span></span><br><span class=\"line\"><span class=\"comment\">//       pipeline: [ &lt;pipeline to execute on the collection to join&gt; ],</span></span><br><span class=\"line\"><span class=\"comment\">//       as: &lt;output array field&gt;</span></span><br><span class=\"line\"><span class=\"comment\">//     &#125;</span></span><br><span class=\"line\"><span class=\"comment\">//&#125;</span></span><br><span class=\"line\"><span class=\"comment\">//自定义一个AggregationOperation类</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">CustomProjectAggregationOperation</span> <span class=\"keyword\">implements</span> <span class=\"title\">AggregationOperation</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> String jsonOperation;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">CustomProjectAggregationOperation</span><span class=\"params\">(String jsonOperation)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.jsonOperation = jsonOperation;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> Document <span class=\"title\">toDocument</span><span class=\"params\">(AggregationOperationContext aggregationOperationContext)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> aggregationOperationContext.getMappedObject(Document.parse(jsonOperation));</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">static</span> String <span class=\"title\">getJsonOperation</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">\"&#123;\"</span> +</span><br><span class=\"line\">                <span class=\"string\">\"    $lookup: \"</span> +</span><br><span class=\"line\">                <span class=\"string\">\"    &#123;\"</span> +</span><br><span class=\"line\">                <span class=\"string\">\"        from: 'chn_set_meal',\"</span> +</span><br><span class=\"line\">                <span class=\"string\">\"        let: &#123;\"</span> +</span><br><span class=\"line\">                <span class=\"string\">\"            id: &#123; $toString: '$_id' &#125;\"</span> +</span><br><span class=\"line\">                <span class=\"string\">\"        &#125;,\"</span> +</span><br><span class=\"line\">                <span class=\"string\">\"        pipeline: [\"</span> +</span><br><span class=\"line\">                <span class=\"string\">\"            &#123;\"</span> +</span><br><span class=\"line\">                <span class=\"string\">\"                $match: \"</span> +</span><br><span class=\"line\">                <span class=\"string\">\"                &#123;\"</span> +</span><br><span class=\"line\">                <span class=\"string\">\"                    $expr: \"</span> +</span><br><span class=\"line\">                <span class=\"string\">\"                    &#123;\"</span> +</span><br><span class=\"line\">                <span class=\"string\">\"                        $and: \"</span> +</span><br><span class=\"line\">                <span class=\"string\">\"                        [\"</span> +</span><br><span class=\"line\">                <span class=\"string\">\"                            &#123;\"</span> +</span><br><span class=\"line\">                <span class=\"string\">\"                                $eq: ['$setMealId', '$$id']\"</span> +</span><br><span class=\"line\">                <span class=\"string\">\"                            &#125;,\"</span> +</span><br><span class=\"line\">                <span class=\"string\">\"                            &#123;\"</span> +</span><br><span class=\"line\">                <span class=\"string\">\"                                $eq: ['$cooperationState', '合作中']\"</span> +</span><br><span class=\"line\">                <span class=\"string\">\"                            &#125;\"</span> +</span><br><span class=\"line\">                <span class=\"string\">\"                        ]\"</span> +</span><br><span class=\"line\">                <span class=\"string\">\"                    &#125;\"</span> +</span><br><span class=\"line\">                <span class=\"string\">\"                &#125;\"</span> +</span><br><span class=\"line\">                <span class=\"string\">\"            &#125;,\"</span> +</span><br><span class=\"line\">                <span class=\"string\">\"            &#123;\"</span> +</span><br><span class=\"line\">                <span class=\"string\">\"                $project: &#123;\"</span> +</span><br><span class=\"line\">                <span class=\"string\">\"                    channelId: 1,\"</span> +</span><br><span class=\"line\">                <span class=\"string\">\"                    channelName: 1\"</span> +</span><br><span class=\"line\">                <span class=\"string\">\"                    cooperationState: 1\"</span> +</span><br><span class=\"line\">                <span class=\"string\">\"                &#125;\"</span> +</span><br><span class=\"line\">                <span class=\"string\">\"            &#125;\"</span> +</span><br><span class=\"line\">                <span class=\"string\">\"        ],\"</span> +</span><br><span class=\"line\">                <span class=\"string\">\"        as: 'channels'\"</span> +</span><br><span class=\"line\">                <span class=\"string\">\"    &#125;\"</span> +</span><br><span class=\"line\">                <span class=\"string\">\"&#125;&#125;\"</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">AggregationOperation aggregationOperation = <span class=\"keyword\">new</span> CustomProjectAggregationOperation(getJsonOperation());</span><br><span class=\"line\">        <span class=\"keyword\">return</span> reactiveMongoTemplate.aggregate(Aggregation.newAggregation(aggregationOperation), SetMeal.class, SetMealListBo.class);</span><br></pre></td></tr></table></figure>\n<p>group</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//背景：查询交易表，订单和交易一对多</span></span><br><span class=\"line\">Aggregation.group(<span class=\"string\">\"orderNo\"</span>)</span><br><span class=\"line\">  <span class=\"comment\">//单一组的金额汇总</span></span><br><span class=\"line\">  .sum(<span class=\"string\">\"amount\"</span>).as(<span class=\"string\">\"totalAmount\"</span>)</span><br><span class=\"line\">  <span class=\"comment\">//组的最后一个订单号</span></span><br><span class=\"line\">  .last(<span class=\"string\">\"orderNo\"</span>).as(<span class=\"string\">\"orderNo\"</span>)</span><br><span class=\"line\">  <span class=\"comment\">//组里数据条数</span></span><br><span class=\"line\">  .count().as(<span class=\"string\">\"tradeCount\"</span>)</span><br><span class=\"line\">  <span class=\"comment\">//把一组数据里每条数据的状态放到一个statuses数组里</span></span><br><span class=\"line\">  .addToSet(<span class=\"string\">\"status\"</span>).as(<span class=\"string\">\"statuses\"</span>)</span><br><span class=\"line\">  <span class=\"comment\">//把一组数据里的一些字段信息重新组装成一个对象放到billItems的对象数组里</span></span><br><span class=\"line\">  .push(<span class=\"keyword\">new</span> BasicDBObject(<span class=\"string\">\"tradeContent\"</span>, <span class=\"string\">\"$tradeContent\"</span>)</span><br><span class=\"line\">        .append(<span class=\"string\">\"tradeNo\"</span>, <span class=\"string\">\"$tradeNo\"</span>)</span><br><span class=\"line\">        .append(<span class=\"string\">\"amount\"</span>, <span class=\"string\">\"$amount\"</span>)</span><br><span class=\"line\">       ).as(<span class=\"string\">\"billItems\"</span>);</span><br></pre></td></tr></table></figure>","raw":null,"categories":[{"name":"程序猿","path":"api/categories/程序猿.json"}],"tags":[{"name":"Java","path":"api/tags/Java.json"},{"name":"Reactive","path":"api/tags/Reactive.json"},{"name":"事务","path":"api/tags/事务.json"},{"name":"mongo","path":"api/tags/mongo.json"},{"name":"数据库","path":"api/tags/数据库.json"},{"name":"Aggregation","path":"api/tags/Aggregation.json"}]},{"title":"WebFlux中mongo操作-Transaction","slug":"WebFlux中mongo操作-Transaction","date":"2020-01-17T07:16:46.000Z","updated":"2020-01-17T08:01:36.430Z","comments":true,"path":"api/articles/WebFlux中mongo操作-Transaction.json","excerpt":"<br><br>","cover":null,"content":"<p><br><br><a id=\"more\"></a><br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@PostMapping</span>(<span class=\"string\">\"/test\"</span>)</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> Mono <span class=\"title\">testA</span><span class=\"params\">(@RequestParam <span class=\"keyword\">boolean</span> exception)</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> embedService.saveAC(<span class=\"keyword\">new</span> ADocument(<span class=\"string\">\"张三\"</span>), <span class=\"keyword\">new</span> CDocument(<span class=\"string\">\"李四\"</span>), exception);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@Override</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> Mono&lt;Boolean&gt; <span class=\"title\">saveAC</span><span class=\"params\">(ADocument aDocument, CDocument cDocument, <span class=\"keyword\">boolean</span> exception)</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> reactiveMongoTemplate.inTransaction()</span><br><span class=\"line\">    <span class=\"comment\">//所有文档的持久化操作都只能在单独一个execute函数中汇总实现</span></span><br><span class=\"line\">    .execute(action -&gt; action.insert(aDocument)</span><br><span class=\"line\">             .flatMap(a -&gt; &#123;</span><br><span class=\"line\">               cDocument.setName(a.getName() + <span class=\"string\">\"copy\"</span>);</span><br><span class=\"line\">               <span class=\"keyword\">return</span> action.insert(cDocument)</span><br><span class=\"line\">                 .map(d -&gt; &#123;</span><br><span class=\"line\">                   <span class=\"keyword\">if</span> (exception) &#123;</span><br><span class=\"line\">                     <span class=\"comment\">//测试跨文档的异常回滚</span></span><br><span class=\"line\">                     <span class=\"keyword\">throw</span> Exceptions.propagate(<span class=\"keyword\">new</span> RuntimeException(<span class=\"string\">\"模拟异常的出现\"</span>));</span><br><span class=\"line\">                   &#125;</span><br><span class=\"line\">                   <span class=\"keyword\">return</span> d;</span><br><span class=\"line\">                 &#125;);</span><br><span class=\"line\">             &#125;)</span><br><span class=\"line\">            )</span><br><span class=\"line\">    <span class=\"comment\">//如果里面是个mono，则用next取出第一个元素就是里面的mono</span></span><br><span class=\"line\">    .next()</span><br><span class=\"line\">    .map(list -&gt; &#123;</span><br><span class=\"line\">      <span class=\"comment\">//需要注意，在execute之外的函数中产生的异常，不会触发事务的回滚。</span></span><br><span class=\"line\">      <span class=\"comment\">//                    if (exception) &#123;</span></span><br><span class=\"line\">      <span class=\"comment\">//                        throw Exceptions.propagate(new RuntimeException(\"模拟异常的出现\"));</span></span><br><span class=\"line\">      <span class=\"comment\">//                    &#125;</span></span><br><span class=\"line\">      <span class=\"keyword\">return</span> Boolean.TRUE;</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>flux的数据库操作，在有事务的前提下不能用flatMap，要用事务不能用flatMap要用concatMap保持有序</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@PostMapping</span>(<span class=\"string\">\"/test\"</span>)</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> Mono <span class=\"title\">testA</span><span class=\"params\">(@RequestParam <span class=\"keyword\">boolean</span> exception)</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> embedService.saveAC(<span class=\"keyword\">new</span> ADocument(<span class=\"string\">\"张三\"</span>), <span class=\"keyword\">new</span> CDocument(<span class=\"string\">\"李四\"</span>), exception);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@Override</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> Mono&lt;Boolean&gt; <span class=\"title\">saveAC</span><span class=\"params\">(ADocument aDocument, CDocument cDocument, <span class=\"keyword\">boolean</span> exception)</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> reactiveMongoTemplate.inTransaction()</span><br><span class=\"line\">    <span class=\"comment\">//所有文档的持久化操作都只能在单独一个execute函数中汇总实现</span></span><br><span class=\"line\">    .execute(action -&gt; Flux.fromIterable(<span class=\"string\">\"1\"</span>, <span class=\"string\">\"2\"</span>, <span class=\"string\">\"3\"</span>)</span><br><span class=\"line\">             <span class=\"comment\">//如果是个flux此处要用concatMap保持有序不能用flatMap</span></span><br><span class=\"line\">             .concatMap(i -&gt; action.insert(aDocument)</span><br><span class=\"line\">                        .flatMap(a -&gt; &#123;</span><br><span class=\"line\">                          cDocument.setName(a.getName() + <span class=\"string\">\"copy\"</span>);</span><br><span class=\"line\">                          <span class=\"keyword\">return</span> action.insert(cDocument)</span><br><span class=\"line\">                            .map(d -&gt; &#123;</span><br><span class=\"line\">                              <span class=\"keyword\">if</span> (exception) &#123;</span><br><span class=\"line\">                                <span class=\"comment\">//测试跨文档的异常回滚</span></span><br><span class=\"line\">                                <span class=\"keyword\">throw</span> Exceptions.propagate(<span class=\"keyword\">new</span> RuntimeException(<span class=\"string\">\"模拟异常的出现\"</span>));</span><br><span class=\"line\">                              &#125;</span><br><span class=\"line\">                              <span class=\"keyword\">return</span> d;</span><br><span class=\"line\">                            &#125;);</span><br><span class=\"line\">                        &#125;));</span><br><span class=\"line\">            )</span><br><span class=\"line\">    <span class=\"comment\">//如果里面返回的就是一个flux则不需要使用next</span></span><br><span class=\"line\">    <span class=\"comment\">//.next()</span></span><br><span class=\"line\">    .map(list -&gt; &#123;</span><br><span class=\"line\">      <span class=\"comment\">//需要注意，在execute之外的函数中产生的异常，不会触发事务的回滚。</span></span><br><span class=\"line\">      <span class=\"comment\">//                    if (exception) &#123;</span></span><br><span class=\"line\">      <span class=\"comment\">//                        throw Exceptions.propagate(new RuntimeException(\"模拟异常的出现\"));</span></span><br><span class=\"line\">      <span class=\"comment\">//                    &#125;</span></span><br><span class=\"line\">      <span class=\"keyword\">return</span> Boolean.TRUE;</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>","raw":null,"categories":[{"name":"程序猿","path":"api/categories/程序猿.json"}],"tags":[{"name":"Java","path":"api/tags/Java.json"},{"name":"Reactive","path":"api/tags/Reactive.json"},{"name":"事务","path":"api/tags/事务.json"},{"name":"mongo","path":"api/tags/mongo.json"},{"name":"数据库","path":"api/tags/数据库.json"},{"name":"Flux","path":"api/tags/Flux.json"}]}]}