{"name":"内网穿透","postlist":[{"title":"使用ngrok配置微信公众号本地开发环境（ADSL屏蔽80端口问题）","slug":"使用ngrok配置微信公众号本地开发环境（ADSL屏蔽80端口问题）","date":"2015-02-04T15:35:40.000Z","updated":"2020-08-15T02:59:39.000Z","comments":true,"path":"api/articles/使用ngrok配置微信公众号本地开发环境（ADSL屏蔽80端口问题）.json","excerpt":"更新记录2016-03-04 更新教程<br>2015-    09-16 添加旧版软件下载<br>2015-02-04 初稿鉴于国内大部分ADSL屏蔽80端口，而微信公众号开发只支持80端口，所以在本地开发测试微信公众号就是一个问题了，这里我们可以使用软件ngrok来解决这个问题。","cover":null,"content":"<h2 id=\"更新记录\"><a href=\"#更新记录\" class=\"headerlink\" title=\"更新记录\"></a>更新记录</h2><p>2016-03-04 更新教程<br>2015-    09-16 添加旧版软件下载<br>2015-02-04 初稿</p>\n<p>鉴于国内大部分ADSL屏蔽80端口，而微信公众号开发只支持80端口，所以在本地开发测试微信公众号就是一个问题了，这里我们可以使用软件ngrok来解决这个问题。<span id=\"more\"></span></p>\n<h2 id=\"配置步骤\"><a href=\"#配置步骤\" class=\"headerlink\" title=\"配置步骤\"></a>配置步骤</h2><h3 id=\"1-注册ngrok账号\"><a href=\"#1-注册ngrok账号\" class=\"headerlink\" title=\"1. 注册ngrok账号\"></a>1. <a href=\"https://dashboard.ngrok.com/user/signup\">注册ngrok账号</a></h3><p>注册成功后拿到授权码<code>auth token</code>，使用ngrok时并不强制用户注册，但注册后会附加更多功能(如自定义二级域名)；</p>\n<h3 id=\"2-下载ngrok，解压；\"><a href=\"#2-下载ngrok，解压；\" class=\"headerlink\" title=\"2. 下载ngrok，解压；\"></a>2. <a href=\"https://ngrok.com/download\">下载ngrok</a>，解压；</h3><h3 id=\"3-启动\"><a href=\"#3-启动\" class=\"headerlink\" title=\"3. 启动\"></a>3. 启动</h3><h5 id=\"方式一\"><a href=\"#方式一\" class=\"headerlink\" title=\"方式一:\"></a>方式一:</h5><p>让本地的‘<a href=\"http://127.0.0.1:80’\">http://127.0.0.1:80’</a> 可以让外网访问<br><figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">ngrok</span> <span class=\"string\">http</span> <span class=\"number\">80</span></span><br></pre></td></tr></table></figure><br>ngrok会随机分配一个二级域名，可直接通过外网可通过<code>http://xxxx.tunnel.mobi</code>来访问本机的<code>http://127.0.0.1:80</code>网站</p>\n<h5 id=\"方式二：使用配置文件启动\"><a href=\"#方式二：使用配置文件启动\" class=\"headerlink\" title=\"方式二：使用配置文件启动:\"></a>方式二：使用配置文件启动:</h5><p>在<code>ngrok.exe</code>目录下执行命令（不带尖括号），生成配置文件（配置文件会在<code>C:\\Users\\用户名/.ngrok2/ngrok.yml</code>下「windows」）<br><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ngrok authtoken &lt;you authtoken&gt;</span><br></pre></td></tr></table></figure><br>修改配置文件，可配置多个tunnel（注意，配置文件是yaml格式，冒号后面如果还有内容需要加空格）<br><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">authtoken:&lt;you authtoken&gt;</span><br><span class=\"line\">tunnels:</span><br><span class=\"line\">  # 自定义隧道名 </span><br><span class=\"line\">  iblogc:</span><br><span class=\"line\">    #本地服务端口 </span><br><span class=\"line\">    addr: 4000</span><br><span class=\"line\">    # 用于http/https里的身份认证</span><br><span class=\"line\">    #auth: &quot;username:password&quot;</span><br><span class=\"line\">    proto: http</span><br><span class=\"line\">    # 二级域名，如果运行提示重复，换一个就行</span><br><span class=\"line\">    subdomain: iblogc</span><br><span class=\"line\">  django:</span><br><span class=\"line\">    addr: 8000</span><br><span class=\"line\">    auth: &quot;abc:123456&quot;</span><br><span class=\"line\">    proto: http</span><br><span class=\"line\">    subdomain: django</span><br><span class=\"line\">  weixin:</span><br><span class=\"line\">    addr: 80</span><br><span class=\"line\">    proto: http</span><br><span class=\"line\">    subdomain: weixin</span><br></pre></td></tr></table></figure></p>\n<p>现在执行<br><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ngrok start iblogc</span><br></pre></td></tr></table></figure></p>\n<p>试试，如果你设置的的二级域名没有被占用的话，那么就会启动成功，否则请更换一个二级域重试。<br><code>http://iblogc.ngrok.io</code> <code>https://iblogc.ngrok.io</code> 协议均可以访问。<br>ngrok-start-iblogc.png)</p>\n<p>你也可以同时启动两个tunnel<br><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ngrok start iblogc django weixin</span><br></pre></td></tr></table></figure><br>ngrok-start-iblogc-django-weixin.png)</p>\n<p>因为我的django tunnel配置文件里添加了<code>auth</code>配置所以访问<code>http://django.ngrok.io</code>需要输入用户名密码。<br>ngrok-auth.png)</p>\n<p>假设<code>weixin</code>就是我本地跑在80端口的微信项目，现在就可以在微信公众平台「开发者中心」可以使用<code>weixin.ngrok.com</code>进行配置了，所有发向此域名的请求都会转发到你的本地<code>127.0.0.1:80</code>上。</p>\n<h3 id=\"4-查看详细信息如果想查看详细的请求信息可以在浏览器里打开http-127-0-0-1-4040查看详细信息\"><a href=\"#4-查看详细信息如果想查看详细的请求信息可以在浏览器里打开http-127-0-0-1-4040查看详细信息\" class=\"headerlink\" title=\"4. 查看详细信息如果想查看详细的请求信息可以在浏览器里打开http://127.0.0.1:4040查看详细信息\"></a>4. 查看详细信息如果想查看详细的请求信息可以在浏览器里打开<code>http://127.0.0.1:4040</code>查看详细信息</h3><p>nrok-web-interface.png)</p>\n<h3 id=\"5-参考文档\"><a href=\"#5-参考文档\" class=\"headerlink\" title=\"5. 参考文档\"></a>5. 参考文档</h3><p>官方文档：<a href=\"https://ngrok.com/docs\">https://ngrok.com/docs</a></p>\n","raw":null,"categories":[{"name":"程序猿","path":"api/categories/程序猿.json"}],"tags":[{"name":"微信公众号","path":"api/tags/微信公众号.json"},{"name":"端口","path":"api/tags/端口.json"},{"name":"ngrok","path":"api/tags/ngrok.json"},{"name":"内网穿透","path":"api/tags/内网穿透.json"}]},{"title":"内网穿透工具frp客户端自定义子域名访问配置","slug":"内网穿透工具frp客户端自定义子域名访问配置","date":"2017-08-16T08:36:56.000Z","updated":"2019-04-09T03:26:20.000Z","comments":true,"path":"api/articles/内网穿透工具frp客户端自定义子域名访问配置.json","excerpt":"<br /><br>","cover":null,"content":"<p><br /><br><span id=\"more\"></span></p>\n<h2 id=\"前提\"><a href=\"#前提\" class=\"headerlink\" title=\"前提\"></a>前提</h2><p>A: 公网电脑<br>B: 内网电脑</p>\n<h2 id=\"下载\"><a href=\"#下载\" class=\"headerlink\" title=\"下载\"></a>下载</h2><p>从<a href=\"[Releases · fatedier/frp · GitHub](https://github.com/fatedier/frp/releases\">releases</a>)下载系统对应的压缩包，Mac可使用<code>darwin amd64</code>的包，在公网电脑和本地电脑各放一份。</p>\n<h2 id=\"配置\"><a href=\"#配置\" class=\"headerlink\" title=\"配置\"></a>配置</h2><p>公网电脑上<code>frps.ini</code><br><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[common]</span><br><span class=\"line\"># 用于接收 frpc 连接的端口</span><br><span class=\"line\">bind_port = 7000</span><br><span class=\"line\"># 通过此端口访问http服务</span><br><span class=\"line\">vhost_http_port = 8080</span><br><span class=\"line\"># 日志文件输出位置</span><br><span class=\"line\">log_file = ./frps.log</span><br><span class=\"line\"># 日志等级</span><br><span class=\"line\">log_level = info</span><br><span class=\"line\"># 域名</span><br><span class=\"line\">subdomain_host = example.com</span><br><span class=\"line\"># frp管理后台端口</span><br><span class=\"line\">dashboard_port = 7500</span><br><span class=\"line\"># frp管理后台用户名</span><br><span class=\"line\">dashboard_user = admin</span><br><span class=\"line\"># frp管理后台密码</span><br><span class=\"line\">dashboard_pwd = admin</span><br></pre></td></tr></table></figure></p>\n<p>本地电脑上<code>frpc.ini</code><br><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[common]</span><br><span class=\"line\"># 公网电脑IP</span><br><span class=\"line\">server_addr = 111.111.111.111</span><br><span class=\"line\"># frp连接的端口</span><br><span class=\"line\">server_port = 7000</span><br><span class=\"line\"></span><br><span class=\"line\">[web]</span><br><span class=\"line\">type = http</span><br><span class=\"line\"># 本地http服务端口</span><br><span class=\"line\">local_port = 8080</span><br><span class=\"line\"># 子域名前缀, 子域名前缀里不要使用下划线&quot;_&quot;，不然可能会出现莫名其妙的400错误可以用&quot;-&quot;代替。</span><br><span class=\"line\">subdomain = iblogc</span><br></pre></td></tr></table></figure></p>\n<p>配置域名<code>example.com</code>的A记录的泛解析<br><code>*.example.com</code>指向公网电脑IP<code>111.111.111.111</code></p>\n<h2 id=\"运行\"><a href=\"#运行\" class=\"headerlink\" title=\"运行\"></a>运行</h2><ol>\n<li>在内网电脑B上<code>8080</code>端口运行<code>http</code>服务</li>\n<li>在公网电脑上运行（Windows电脑上运行请去掉<code>./</code>）<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">./frps -c ./frps.ini</span><br></pre></td></tr></table></figure></li>\n<li>在本地电脑上运行（Windows电脑上运行请去掉<code>./</code>）<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">./frpc -c ./frpc.ini</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<h2 id=\"成功\"><a href=\"#成功\" class=\"headerlink\" title=\"成功\"></a>成功</h2><p>在任何一台能联网的机器上访问 <code>http://iblogc.example.com:8080</code> 即可访问内网电脑B上的http服务。<br>在任务一台能联网的机器上访问<code>111.111.111.111:7500</code>即可访问frp的管理后台。</p>\n<h2 id=\"frps服务端与nginx可共用80端口\"><a href=\"#frps服务端与nginx可共用80端口\" class=\"headerlink\" title=\"frps服务端与nginx可共用80端口\"></a>frps服务端与nginx可共用80端口</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">server &#123;</span><br><span class=\"line\">       listen 80;</span><br><span class=\"line\">       server_name *.example.com;</span><br><span class=\"line\">       location / &#123;</span><br><span class=\"line\">           proxy_pass http://127.0.0.1:8080;</span><br><span class=\"line\">           proxy_redirect http://$host/ http://$http_host/;</span><br><span class=\"line\">           proxy_set_header X-Real-IP $remote_addr;</span><br><span class=\"line\">           proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;</span><br><span class=\"line\">           proxy_set_header Host $host;</span><br><span class=\"line\">       &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>","raw":null,"categories":[{"name":"程序猿","path":"api/categories/程序猿.json"}],"tags":[{"name":"教程","path":"api/tags/教程.json"},{"name":"内网穿透","path":"api/tags/内网穿透.json"}]}]}