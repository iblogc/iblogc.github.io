{"name":"centOS","postlist":[{"title":"在CentOS7上用MySQL+Nginx+Gunicorn+Supervisor部署Django","slug":"在centos7使用mysql-nginx-gunicorn+supervisor部署django","date":"2016-12-08T15:19:59.000Z","updated":"2020-01-17T07:59:15.669Z","comments":true,"path":"api/articles/在centos7使用mysql-nginx-gunicorn+supervisor部署django.json","excerpt":"本文记录下在CentOS下部署Django项目的步骤。<br>","cover":null,"content":"<p>本文记录下在CentOS下部署Django项目的步骤。<br><a id=\"more\"></a></p>\n<h2 id=\"MySQL\"><a href=\"#MySQL\" class=\"headerlink\" title=\"MySQL\"></a>MySQL</h2><h3 id=\"安装mysql和mysql-devel\"><a href=\"#安装mysql和mysql-devel\" class=\"headerlink\" title=\"安装mysql和mysql-devel\"></a>安装mysql和mysql-devel</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum install mysql</span><br><span class=\"line\">yum install mysql-devel</span><br></pre></td></tr></table></figure>\n<h3 id=\"安装mysql-server\"><a href=\"#安装mysql-server\" class=\"headerlink\" title=\"安装mysql-server\"></a>安装mysql-server</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget http://dev.mysql.com/get/mysql-community-release-el7-5.noarch.rpm</span><br><span class=\"line\">rpm -ivh mysql-community-release-el7-5.noarch.rpm</span><br><span class=\"line\">yum install mysql-community-server</span><br></pre></td></tr></table></figure>\n<h3 id=\"重启mysql服务\"><a href=\"#重启mysql服务\" class=\"headerlink\" title=\"重启mysql服务\"></a>重启mysql服务</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">service mysqld restart</span><br></pre></td></tr></table></figure>\n<h3 id=\"设置root密码\"><a href=\"#设置root密码\" class=\"headerlink\" title=\"设置root密码\"></a>设置root密码</h3><p>初次安装mysql需要设置root密码<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql -uroot</span><br><span class=\"line\">set password for &apos;root&apos;@&apos;localhost&apos; =password(&apos;password&apos;);</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"配置mysql\"><a href=\"#配置mysql\" class=\"headerlink\" title=\"配置mysql\"></a>配置mysql</h3><p>在<code>/etc/my.cnf</code>文件中[mysql]和[mysql]中添加以下内容<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[mysql]</span><br><span class=\"line\">default-character-set=utf8</span><br><span class=\"line\"></span><br><span class=\"line\">[mysqld]</span><br><span class=\"line\">character-set-server=utf8</span><br></pre></td></tr></table></figure></p>\n<p>字符编码保持和<code>/usr/share/mysql/charsets/Index.xml</code>中的一致。</p>\n<h3 id=\"远程连接设置\"><a href=\"#远程连接设置\" class=\"headerlink\" title=\"远程连接设置\"></a>远程连接设置</h3><p>把在所有数据库的所有表的所有权限赋值给位于所有IP地址的root用户。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql&gt; grant all privileges on *.* to root@&apos;%&apos;identified by &apos;password&apos;;</span><br></pre></td></tr></table></figure></p>\n<p>如果是新用户而不是root，则要先新建用户<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql&gt;create user &apos;username&apos;@&apos;%&apos; identified by &apos;password&apos;;</span><br></pre></td></tr></table></figure></p>\n<p>此时就可以进行远程连接了。</p>\n<h2 id=\"Virtualenv\"><a href=\"#Virtualenv\" class=\"headerlink\" title=\"Virtualenv\"></a>Virtualenv</h2><p>安装epel扩展源<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum install epel-release</span><br></pre></td></tr></table></figure></p>\n<p>安装pip<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum install python-pip</span><br></pre></td></tr></table></figure></p>\n<p>安装virtualenv和virtualenvwrapper<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pip install virtualenv virtualenvwrapper</span><br></pre></td></tr></table></figure></p>\n<p>编辑<code>~/.bashrc</code>文件，结尾添加以下内容<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">export WORKON_HOME=~/.virtualenvs</span><br><span class=\"line\">source /usr/bin/virtualenvwrapper.sh</span><br></pre></td></tr></table></figure></p>\n<p>然后执行以下命令使配置生效<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">source ~/.bashrc</span><br></pre></td></tr></table></figure></p>\n<p>创建env<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mkvirtualenv explame</span><br></pre></td></tr></table></figure></p>\n<p>使用pip安装项目需要的包</p>\n<h2 id=\"WSGI\"><a href=\"#WSGI\" class=\"headerlink\" title=\"WSGI\"></a>WSGI</h2><p>在项目目录下新建<code>nginx_wsgi.py</code>文件<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">touch nginx_wsgi.py</span><br></pre></td></tr></table></figure></p>\n<p>添加如下内容<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import sys</span><br><span class=\"line\">import site</span><br><span class=\"line\">import os</span><br><span class=\"line\"> </span><br><span class=\"line\"># site-packages</span><br><span class=\"line\">site.addsitedir(&apos;/home/nginxuser/.virtualenvs/example/lib/python2.7/site-packages&apos;)</span><br><span class=\"line\"># Add the  project  directory</span><br><span class=\"line\"># sys.path.append(&apos;/home/nginxuser/nginxuser&apos;)</span><br><span class=\"line\">PROJECT_DIR = &apos;/home/nginxuser/projects/example&apos;</span><br><span class=\"line\">sys.path.insert(0, PROJECT_DIR)</span><br><span class=\"line\">os.environ[&apos;DJANGO_SETTINGS_MODULE&apos;] = &apos;example.settings.prod&apos;</span><br><span class=\"line\"># Activate your virtual env</span><br><span class=\"line\">activate_env = os.path.expanduser(&quot;/home/nginxuser/.virtualenvs/example/bin/activate_this.py&quot;)</span><br><span class=\"line\">execfile(activate_env, dict(__file__=activate_env))</span><br><span class=\"line\"> </span><br><span class=\"line\"># after activite env</span><br><span class=\"line\">from django.core.wsgi import get_wsgi_application</span><br><span class=\"line\"> </span><br><span class=\"line\">application = get_wsgi_application()</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"Nginx\"><a href=\"#Nginx\" class=\"headerlink\" title=\"Nginx\"></a>Nginx</h2><h3 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum install nginx</span><br></pre></td></tr></table></figure>\n<h3 id=\"检查配置是否有错\"><a href=\"#检查配置是否有错\" class=\"headerlink\" title=\"检查配置是否有错\"></a>检查配置是否有错</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nginx -t -c /etc/nginx/nginx.conf</span><br></pre></td></tr></table></figure>\n<h3 id=\"启动nginx\"><a href=\"#启动nginx\" class=\"headerlink\" title=\"启动nginx\"></a>启动nginx</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">service nginx start</span><br></pre></td></tr></table></figure>\n<h3 id=\"设置开机自启\"><a href=\"#设置开机自启\" class=\"headerlink\" title=\"设置开机自启\"></a>设置开机自启</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">systemctl enable nginx</span><br></pre></td></tr></table></figure>\n<h3 id=\"创建用户\"><a href=\"#创建用户\" class=\"headerlink\" title=\"创建用户\"></a>创建用户</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">useradd nginxuser</span><br><span class=\"line\">passwd nginxuser</span><br></pre></td></tr></table></figure>\n<h3 id=\"修改nginx主配置\"><a href=\"#修改nginx主配置\" class=\"headerlink\" title=\"修改nginx主配置\"></a>修改nginx主配置</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vim /etc/nginx/nginx.conf</span><br></pre></td></tr></table></figure>\n<p>非注释首行<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">user nginx</span><br></pre></td></tr></table></figure></p>\n<p>改为<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">user nginxuser</span><br></pre></td></tr></table></figure></p>\n<p>不然可能会出现网站静态文件访问报403问题。</p>\n<h3 id=\"新建网站运行配置\"><a href=\"#新建网站运行配置\" class=\"headerlink\" title=\"新建网站运行配置\"></a>新建网站运行配置</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vim /etc/nginx/conf.d/example.conf</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">server &#123;                                                               </span><br><span class=\"line\">    listen      80;                                                    </span><br><span class=\"line\">    server_name example.com;                            </span><br><span class=\"line\">    charset     utf-8;                                                 </span><br><span class=\"line\">    client_max_body_size 75M;                                          </span><br><span class=\"line\">    access_log /home/nginxuser/projects/example/nginxlogs/access.log;</span><br><span class=\"line\">    error_log /home/nginxuser/projects/example/nginxlogs/error.log;          </span><br><span class=\"line\"> </span><br><span class=\"line\">    location /static &#123;                                                 </span><br><span class=\"line\">        alias /home/nginxuser/projects/explame/static;                </span><br><span class=\"line\">    &#125;                                                                  </span><br><span class=\"line\"> </span><br><span class=\"line\">    location / &#123;                                                       </span><br><span class=\"line\">        proxy_pass http://127.0.0.1:8000;                              </span><br><span class=\"line\">        proxy_set_header Host $host;                                   </span><br><span class=\"line\">        proxy_set_header X-Real-IP $remote_addr;                       </span><br><span class=\"line\">        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;   </span><br><span class=\"line\">    &#125;                                                                  </span><br><span class=\"line\">&#125;                                                                       jk</span><br></pre></td></tr></table></figure>\n<h2 id=\"Gunicorn\"><a href=\"#Gunicorn\" class=\"headerlink\" title=\"Gunicorn\"></a>Gunicorn</h2><h3 id=\"安装-1\"><a href=\"#安装-1\" class=\"headerlink\" title=\"安装\"></a>安装</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pip install gunicorn</span><br></pre></td></tr></table></figure>\n<p>项目根目录下添加gunicorn运行配置文件gunicorn.conf.py<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import multiprocessing</span><br><span class=\"line\">bind = &quot;127.0.0.1:8000&quot;</span><br><span class=\"line\">workers = 2</span><br><span class=\"line\">errorlog = &quot;/home/nginxuser/example/gunicorn.error.log&quot;</span><br><span class=\"line\">#loglevel = &quot;debug&quot;</span><br><span class=\"line\">proc_name = &quot;gunicorn_example&quot;</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"启动\"><a href=\"#启动\" class=\"headerlink\" title=\"启动\"></a>启动</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo gunicorn example.nginx_wsgi:application -c /home/nginxuser/projects/example/gunicorn.conf.py</span><br></pre></td></tr></table></figure>\n<p>后台运行<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo nohup gunicorn example.nginx_wsgi:application -c /home/nginxuser/projects/example/gunicorn.conf.py&amp;</span><br></pre></td></tr></table></figure></p>\n<p>如果运行报错先使用以下命令检查下nginx配置是否有错<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nginx -t -c /etc/nginx/nginx.conf</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"Supervisor\"><a href=\"#Supervisor\" class=\"headerlink\" title=\"Supervisor\"></a>Supervisor</h2><h3 id=\"安装-2\"><a href=\"#安装-2\" class=\"headerlink\" title=\"安装\"></a>安装</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pip install supervisor</span><br></pre></td></tr></table></figure>\n<h3 id=\"创建管理进程配置文件\"><a href=\"#创建管理进程配置文件\" class=\"headerlink\" title=\"创建管理进程配置文件\"></a>创建管理进程配置文件</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vim /etc/supervisord.d/example.ini</span><br></pre></td></tr></table></figure>\n<p>（需要注意：用 supervisord 管理时，gunicorn 的 daemon 选项需要设置为 False）<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[program:example]</span><br><span class=\"line\">directory = /home/nginxuser/projects/example ; 程序的启动目录</span><br><span class=\"line\">command = gunicorn example.nginx_wsgi:application -c /home/nginxuser/projects/example/gunicorn.conf.py  ; 启动命令，可以看出与手动在命令行启动的命令是一样的</span><br><span class=\"line\">autostart = true     ; 在 supervisord 启动的时候也自动启动</span><br><span class=\"line\">startsecs = 5        ; 启动 5 秒后没有异常退出，就当作已经正常启动了</span><br><span class=\"line\">autorestart = true   ; 程序异常退出后自动重启</span><br><span class=\"line\">startretries = 3     ; 启动失败自动重试次数，默认是 3</span><br><span class=\"line\">user = nginx         ; 用哪个用户启动</span><br><span class=\"line\">redirect_stderr = true  ; 把 stderr 重定向到 stdout，默认 false</span><br><span class=\"line\">stdout_logfile_maxbytes = 20MB  ; stdout 日志文件大小，默认 50MB</span><br><span class=\"line\">stdout_logfile_backups = 20     ; stdout 日志文件备份数</span><br><span class=\"line\">; stdout 日志文件，需要注意当指定目录不存在时无法正常启动，所以需要手动创建目录（supervisord 会自动创建日志文件）</span><br><span class=\"line\">stdout_logfile = /data/logs/usercenter_stdout.log</span><br><span class=\"line\"></span><br><span class=\"line\">; 可以通过 environment 来添加需要的环境变量，一种常见的用法是修改 PYTHONPATH</span><br><span class=\"line\">; environment=PYTHONPATH=$PYTHONPATH:/path/to/somewhere</span><br></pre></td></tr></table></figure></p>\n<p><strong>冒号后面要有空格</strong></p>\n<h3 id=\"启动-1\"><a href=\"#启动-1\" class=\"headerlink\" title=\"启动\"></a>启动</h3><p>使用<code>-c</code>指定配置文件。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">supervisord -c /etc/supervisord.conf</span><br></pre></td></tr></table></figure></p>\n<p>如果启动时遇到以下报错信息<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Error: Another program is already listening on a port that one of our HTTP servers is configured to use. Shut this program down first before starting supervisord.</span><br><span class=\"line\">For help, use /use/bin/supervisord -h</span><br></pre></td></tr></table></figure></p>\n<p>可以使用以下命令解决<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo unlink /var/run/supervisor/supervisor.sock</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"命令行客户端工具supervisorctl\"><a href=\"#命令行客户端工具supervisorctl\" class=\"headerlink\" title=\"命令行客户端工具supervisorctl\"></a>命令行客户端工具supervisorctl</h3><p>启动时需要使用和<code>supervisorctl</code>使用一样的配置文件。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">supervisorctl -c /etc/supervisord.conf</span><br></pre></td></tr></table></figure></p>\n<p>启动后进入<code>supervisorctl</code>的shell，在此shell里可以执行以下命令<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">status # 查看程序状态</span><br><span class=\"line\">start example # 启动example程序</span><br><span class=\"line\">stop example # 关闭example程序</span><br><span class=\"line\">restart example # 重启example程序</span><br><span class=\"line\">reread # 读取有更新（增加）的配置文件，不会启动新添加的程序</span><br><span class=\"line\">update # 重启配置文件修改过的程序</span><br></pre></td></tr></table></figure></p>\n<p>也可以不进shell执行以上命令<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">supervisorctl status # 查看程序状态</span><br><span class=\"line\">supervisorctl start example # 启动example程序</span><br><span class=\"line\">supervisorctl stop example # 关闭example程序</span><br><span class=\"line\">supervisorctl restart example # 重启example程序</span><br><span class=\"line\">supervisorctl reread # 读取有更新（增加）的配置文件，不会启动新添加的程序</span><br><span class=\"line\">supervisorctl update # 重启配置文件修改过的程序</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"开启web管理界面\"><a href=\"#开启web管理界面\" class=\"headerlink\" title=\"开启web管理界面\"></a>开启web管理界面</h3><p>如果要开启web管理界面，打开<code>/etc/supervisord.conf</code>把下面几行取消注释即可<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">:[inet_http_server]         ; inet (TCP) server disabled by default</span><br><span class=\"line\">:port=127.0.0.1:9001        ; (ip_address:port specifier, *:port for all iface)</span><br><span class=\"line\">:username=user              ; (default is no username (open server))</span><br><span class=\"line\">:password=123               ; (default is no password (open server))</span><br></pre></td></tr></table></figure></p>\n","raw":null,"categories":[{"name":"程序猿","path":"api/categories/程序猿.json"}],"tags":[{"name":"Django","path":"api/tags/Django.json"},{"name":"centOS","path":"api/tags/centOS.json"},{"name":"Nginx","path":"api/tags/Nginx.json"},{"name":"Gunicorn","path":"api/tags/Gunicorn.json"},{"name":"MySQL","path":"api/tags/MySQL.json"},{"name":"Supervisor","path":"api/tags/Supervisor.json"}]}]}