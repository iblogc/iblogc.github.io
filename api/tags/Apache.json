{"name":"Apache","postlist":[{"title":"Apache Rewrite","slug":"Apache-Rewrite","date":"2015-05-18T13:46:34.000Z","updated":"2020-01-17T07:57:49.478Z","comments":true,"path":"api/articles/Apache-Rewrite.json","excerpt":"本文是对今天使用Apache的Rewrite技术做一个简单的记录。Apache的rewrite模块，提供了一个基于规则的重写(rewrite,也许译为重构更为合适)引擎，来实时重写发送到Apache的请求URL。因功能极其强大，被称为URL重写的“瑞士军刀”。这个模块使用一个基于正则表达式解析器开发的重写引擎，根据web管理员定义的规则来实时(on the fly)重写请求URL。它支持任意数目的重写规则，以及附加到一条规则上的任意数目的规则条件，从而提供了一套非常灵活和功能强大的URL处理机制。 URL处理操作的实施与否，依赖于各种各样的条件检查，如检查服务器变量、环境变量、HTTP头字段、时间戳的值，甚至外部数据库的检索结果。这个模块可 以在服务器范围内(http.conf)、目录范围内(.htaccess)或请求串(query-string)的一部分处理有关的URL。重写的结果 URL，可以指向一个站内的处理程序、指向站外的重定向或者一个站内的代理。与灵活和功能强大相随的是设置的复杂。<br>","cover":null,"content":"<p>本文是对今天使用Apache的Rewrite技术做一个简单的记录。</p>\n<blockquote>\n<p>Apache的rewrite模块，提供了一个基于规则的重写(rewrite,也许译为重构更为合适)引擎，来实时重写发送到Apache的请求URL。因功能极其强大，被称为URL重写的“瑞士军刀”。</p>\n</blockquote>\n<p>这个模块使用一个基于正则表达式解析器开发的重写引擎，根据web管理员定义的规则来实时(on the fly)重写请求URL。它支持任意数目的重写规则，以及附加到一条规则上的任意数目的规则条件，从而提供了一套非常灵活和功能强大的URL处理机制。 URL处理操作的实施与否，依赖于各种各样的条件检查，如检查服务器变量、环境变量、HTTP头字段、时间戳的值，甚至外部数据库的检索结果。这个模块可 以在服务器范围内(http.conf)、目录范围内(.htaccess)或请求串(query-string)的一部分处理有关的URL。重写的结果 URL，可以指向一个站内的处理程序、指向站外的重定向或者一个站内的代理。与灵活和功能强大相随的是设置的复杂。<br><a id=\"more\"></a></p>\n<h2 id=\"更新历史\"><a href=\"#更新历史\" class=\"headerlink\" title=\"更新历史\"></a>更新历史</h2><p>2015年05月18日 - 初稿</p>\n<h2 id=\"开启模块\"><a href=\"#开启模块\" class=\"headerlink\" title=\"开启模块\"></a>开启模块</h2><p>在<code>http.conf</code>中找到<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># LoadModule rewrite_module modules/mod_rewrite.so</span><br></pre></td></tr></table></figure></p>\n<p>取消注释</p>\n<h2 id=\"定义规则\"><a href=\"#定义规则\" class=\"headerlink\" title=\"定义规则\"></a>定义规则</h2><p>在<code>http.conf</code>中加入下列代码（如果启用了<code>httpd-vhosts.conf</code>，请在<code>httpd-vhosts.conf</code>里做配置）<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;IfModule rewrite_module&gt;</span><br><span class=\"line\">    RewriteEngine on</span><br><span class=\"line\">    RewriteCond %&#123;HTTP_HOST&#125; ^www.a.com [NC]</span><br><span class=\"line\">    RewriteRule ^/(.*) http://www.b.com/$1 [R=301,l]</span><br><span class=\"line\">&lt;IfModule&gt;</span><br></pre></td></tr></table></figure></p>\n<p><code>RewriteCond</code>义重写发生的条件，在一条RewriteRule指令前面可能会有一条或多条RewriteCond指令，只有当自身的模板(pattern)匹配成功且这些条件也满足时规则才被应用于当前URL处理，上面代码的<br><code>NC</code>：不区分大小写<br><code>RewriteRule</code>满足<code>^/(.*)</code>此规则的所有URL都重定向到<code>http://www.b.com/$1</code>，<code>$1</code>使用前面<code>(.*)</code>匹配后的字符填充</p>\n<p>所以前面的规则就是的最终效果是访问<code>www.a.com</code>的所以页面都会被重定向到<code>www.b.com</code>相应路径下的页面</p>\n<h2 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h2><blockquote>\n<p><a href=\"http://blog.chinaunix.net/uid-20639775-id-154471.html\" target=\"_blank\" rel=\"noopener\">http://blog.chinaunix.net/uid-20639775-id-154471.html</a><br><a href=\"http://man.lupaworld.com/content/manage/Apache2.2_chinese_manual/mod/mod_rewrite.html\" target=\"_blank\" rel=\"noopener\">http://man.lupaworld.com/content/manage/Apache2.2_chinese_manual/mod/mod_rewrite.html</a><br><a href=\"http://httpd.apache.org/docs/current/mod/mod_rewrite.html\" target=\"_blank\" rel=\"noopener\">http://httpd.apache.org/docs/current/mod/mod_rewrite.html</a></p>\n</blockquote>\n","raw":null,"categories":[{"name":"程序猿","path":"api/categories/程序猿.json"}],"tags":[{"name":"Apache","path":"api/tags/Apache.json"},{"name":"重定向","path":"api/tags/重定向.json"}]}]}