{"name":"curl","postlist":[{"title":"curl常用命令","slug":"curl常用命令","date":"2015-12-17T13:29:29.000Z","updated":"2020-01-17T07:57:28.928Z","comments":true,"path":"api/articles/curl常用命令.json","excerpt":"curl是利用URL语法在命令行方式下工作的开源文件传输工具。它被广泛应用在Unix、多种Linux发行版中，并且有DOS和Win32、Win64下的移植版本。<br>","cover":null,"content":"<p>curl是利用URL语法在命令行方式下工作的开源文件传输工具。它被广泛应用在Unix、多种Linux发行版中，并且有DOS和Win32、Win64下的移植版本。<br><a id=\"more\"></a></p>\n<h3 id=\"访问url并输出结果\"><a href=\"#访问url并输出结果\" class=\"headerlink\" title=\"访问url并输出结果\"></a>访问url并输出结果</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">curl http://www.example.com</span><br></pre></td></tr></table></figure>\n<h3 id=\"传递参数\"><a href=\"#传递参数\" class=\"headerlink\" title=\"传递参数\"></a>传递参数</h3><p>默认curl使用GET方式请求数据，这种方式下直接通过URL传递数据<br>可以通过 –data/-d 方式指定使用POST方式传递数据<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># GET</span><br><span class=\"line\">curl -u username https://api.github.com/user?access_token=XXXXXXXXXX</span><br><span class=\"line\"></span><br><span class=\"line\"># POST</span><br><span class=\"line\">curl -u username -d &quot;param1=value1&amp;param2=value&quot; https://api.github.com</span><br><span class=\"line\"></span><br><span class=\"line\"># 也可以指定一个文件，将该文件中的内容当作数据传递给服务器端</span><br><span class=\"line\">curl -d @filename https://github.api.com/authorizations</span><br></pre></td></tr></table></figure></p>\n<p>注：默认情况下，通过POST方式传递过去的数据中若有特殊字符，首先需要将特殊字符转义在传递给服务器端，如value值中包含有空格，则需要先将空格转换成%20，如：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">curl -d &quot;value%201&quot; http://hostname.com</span><br></pre></td></tr></table></figure></p>\n<p>在新版本的CURL中，提供了新的选项 –data-urlencode，通过该选项提供的参数会自动转义特殊字符。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">curl --data-urlencode &quot;value 1&quot; http://hostname.com</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"指定请求方式\"><a href=\"#指定请求方式\" class=\"headerlink\" title=\"指定请求方式\"></a>指定请求方式</h3><p>除了使用GET和POST协议外，还可以通过 -X 选项指定其它协议，如：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">curl -I -X DELETE https://api.github.com</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"设置请求头信息\"><a href=\"#设置请求头信息\" class=\"headerlink\" title=\"设置请求头信息\"></a>设置请求头信息</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">curl -H &apos;Accept-Language: zh&apos; http://cnn.com</span><br></pre></td></tr></table></figure>\n<p><code>-H</code>或被多次指定<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">curl -H &apos;Host: 157.166.226.25&apos;-H &apos;Accept-Language: zh&apos;-H &apos;Cookie: ID=1234&apos; http://cnn.com</span><br></pre></td></tr></table></figure></p>\n<p>对于”User-Agent”, “Cookie”, “Host”这类标准的HTTP头部字段，通常会有另外一种设置方法。curl命令提供了特定的选项来对这些头部字段进行设置：<br>-A (or –user-agent): 设置 “User-Agent” 字段.<br>-b (or –cookie): 设置 “Cookie” 字段.<br>-e (or –referer): 设置 “Referer” 字段.<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">curl -H &quot;User-Agent: my browser&quot; http://cnn.com</span><br><span class=\"line\">curl -A &quot;my browser&quot; http://cnn.com</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"查看响应头信息\"><a href=\"#查看响应头信息\" class=\"headerlink\" title=\"查看响应头信息\"></a>查看响应头信息</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">curl -I http://www.baidu.com</span><br></pre></td></tr></table></figure>\n<h3 id=\"提交表单\"><a href=\"#提交表单\" class=\"headerlink\" title=\"提交表单\"></a>提交表单</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">curl --form &quot;fileupload=@filename.txt&quot; http://hostname/resource</span><br></pre></td></tr></table></figure>\n<h3 id=\"访问url并奖结果保存到本地文件中\"><a href=\"#访问url并奖结果保存到本地文件中\" class=\"headerlink\" title=\"访问url并奖结果保存到本地文件中\"></a>访问url并奖结果保存到本地文件中</h3><p><code>-o</code>: 将文件保存为命令行中指定的文件名到本地<br><code>-O</code>: 使用url中默认的文件名保存文件到本地<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">curl -o index.html http://www.example.com</span><br><span class=\"line\"># 或</span><br><span class=\"line\">curl  http://www.baidu.com &gt; index.html</span><br><span class=\"line\"># 在windows上没成功</span><br><span class=\"line\">curl -O http://www.example.com</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"忽略证书错误\"><a href=\"#忽略证书错误\" class=\"headerlink\" title=\"忽略证书错误\"></a>忽略证书错误</h3><p>工作中，经常需要用自签的假证书搭建开发环境。cURL在遇到证书错误时罢工，使用 -k 参数就可以让它不做证书校验。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">curl -k https://www.example.com</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"获取重定向后的页面\"><a href=\"#获取重定向后的页面\" class=\"headerlink\" title=\"获取重定向后的页面\"></a>获取重定向后的页面</h3><p>如果url重定向的话，curl默认是不会去获取重定向后的url页面的，使用<code>-L</code>可进行强制重定向<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">curl -L http://www.example.com</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"发送压缩的请求\"><a href=\"#发送压缩的请求\" class=\"headerlink\" title=\"发送压缩的请求\"></a>发送压缩的请求</h3><p>cURL提供了一个 –compress 参数，可以用来发送支持压缩的请求。但使用了–compress之后，虽然传输过程是压缩的，cURL的输出还是解压之后的，难以看到效果。</p>\n<p>自己写一个 Accept-Encoding 字段在头信息中。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">curl -H &quot;Accept-Encoding: gzip&quot; http://www.kuqin.com/</span><br></pre></td></tr></table></figure></p>\n<p>如果直接运行上面的命令，会得到一堆乱码，因为cURL输出的内容，是压缩后的数据。不妨在后面接一个gunzip试试。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 使用gunzip解压</span><br><span class=\"line\">curl -H &quot;Accept-Encoding: gzip&quot; http://www.kuqin.com/ | gunzip</span><br></pre></td></tr></table></figure></p>\n<p>使用gunzip解压之后，信息又被还原了。</p>\n<h3 id=\"断点续传\"><a href=\"#断点续传\" class=\"headerlink\" title=\"断点续传\"></a>断点续传</h3><p>通过使用-C选项可对大文件使用断点续传功能<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 未下载完成即中断该进程</span><br><span class=\"line\">curl -o a.zip http://www.example.com/bigfile.zip</span><br><span class=\"line\"></span><br><span class=\"line\"># 后面可以通过-C来继续下载</span><br><span class=\"line\">curl -C -o a.html http://www.example.com/bigfile.zip</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"下载限速\"><a href=\"#下载限速\" class=\"headerlink\" title=\"下载限速\"></a>下载限速</h3><p>使用-limit-rate进行限速<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 限速为100k/s</span><br><span class=\"line\">curl --limit-rate 1000k -o a.zip http://www.example.com/bigfile.zip</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"根据文件修改时间来判断是否进行下载\"><a href=\"#根据文件修改时间来判断是否进行下载\" class=\"headerlink\" title=\"根据文件修改时间来判断是否进行下载\"></a>根据文件修改时间来判断是否进行下载</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 若文件的修改时间在2011/12/11之后，则下载</span><br><span class=\"line\">curl -z 21-Dec-11 http://www.example.com/bigfile.zip</span><br></pre></td></tr></table></figure>\n<h3 id=\"授权\"><a href=\"#授权\" class=\"headerlink\" title=\"授权\"></a>授权</h3><p>在访问需要授权的页面时，可通过<code>-u</code>来提供用户名和密码进行授权<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">curl -u username:password http://www.example.com</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"ftp操作\"><a href=\"#ftp操作\" class=\"headerlink\" title=\"ftp操作\"></a>ftp操作</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 列出指定目录下的所有文件</span><br><span class=\"line\">curl -u ftpuser:ftppw -O ftp://ftp_server/public_html/</span><br><span class=\"line\"></span><br><span class=\"line\"># 下载文件</span><br><span class=\"line\">curl -u ftpuser:ftppw -O</span><br><span class=\"line\">ftp://ftp_server/public_hmtl/bigfile.zip</span><br><span class=\"line\"></span><br><span class=\"line\"># 上传文件</span><br><span class=\"line\">curl -u ftpuser:ftppw -T myfile.txt ftp://ftp_server/public_html/</span><br><span class=\"line\"></span><br><span class=\"line\"># 上传多个文件</span><br><span class=\"line\">curl -u ftpuser:ftppw -T &quot;&#123;myfile1.txt, myfile2.txt&#125;&quot; ftp://ftp_server/public_html/</span><br><span class=\"line\"></span><br><span class=\"line\"># 从标准输入获取内容保存到服务器的指定文件中</span><br><span class=\"line\">curl -u ftpuser:ftppw -T - ftp://ftp_server/public_html/1.txt</span><br></pre></td></tr></table></figure>\n<h3 id=\"设置代理\"><a href=\"#设置代理\" class=\"headerlink\" title=\"设置代理\"></a>设置代理</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">curl -x proxyserver.com:1080 http://www.example.com</span><br></pre></td></tr></table></figure>\n<h3 id=\"保存与使用网站的cookie信息\"><a href=\"#保存与使用网站的cookie信息\" class=\"headerlink\" title=\"保存与使用网站的cookie信息\"></a>保存与使用网站的cookie信息</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 将网站的cookies信息保存到example_cookies文件中</span><br><span class=\"line\">curl -D example_cookies http://www.example.com</span><br><span class=\"line\"></span><br><span class=\"line\"># 使用cookies信息访问url</span><br><span class=\"line\">curl -b example_cookies http://www.example.com/user/</span><br></pre></td></tr></table></figure>\n","raw":null,"categories":[{"name":"程序猿","path":"api/categories/程序猿.json"}],"tags":[{"name":"curl","path":"api/tags/curl.json"},{"name":"教程","path":"api/tags/教程.json"}]}]}