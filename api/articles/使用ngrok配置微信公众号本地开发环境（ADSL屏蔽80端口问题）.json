{"title":"使用ngrok配置微信公众号本地开发环境（ADSL屏蔽80端口问题）","slug":"使用ngrok配置微信公众号本地开发环境（ADSL屏蔽80端口问题）","date":"2015-02-04T15:35:40.000Z","updated":"2020-08-15T02:59:39.653Z","comments":true,"path":"api/articles/使用ngrok配置微信公众号本地开发环境（ADSL屏蔽80端口问题）.json","excerpt":"更新记录2016-03-04 更新教程<br>2015-    09-16 添加旧版软件下载<br>2015-02-04 初稿鉴于国内大部分ADSL屏蔽80端口，而微信公众号开发只支持80端口，所以在本地开发测试微信公众号就是一个问题了，这里我们可以使用软件ngrok来解决这个问题。","covers":null,"content":"<h2 id=\"更新记录\"><a href=\"#更新记录\" class=\"headerlink\" title=\"更新记录\"></a>更新记录</h2><p>2016-03-04 更新教程<br>2015-    09-16 添加旧版软件下载<br>2015-02-04 初稿</p>\n<p>鉴于国内大部分ADSL屏蔽80端口，而微信公众号开发只支持80端口，所以在本地开发测试微信公众号就是一个问题了，这里我们可以使用软件ngrok来解决这个问题。<a id=\"more\"></a></p>\n<h2 id=\"配置步骤\"><a href=\"#配置步骤\" class=\"headerlink\" title=\"配置步骤\"></a>配置步骤</h2><h3 id=\"1-注册ngrok账号\"><a href=\"#1-注册ngrok账号\" class=\"headerlink\" title=\"1. 注册ngrok账号\"></a>1. <a href=\"https://dashboard.ngrok.com/user/signup\" target=\"_blank\" rel=\"noopener\">注册ngrok账号</a></h3><p>注册成功后拿到授权码<code>auth token</code>，使用ngrok时并不强制用户注册，但注册后会附加更多功能(如自定义二级域名)；</p>\n<h3 id=\"2-下载ngrok，解压；\"><a href=\"#2-下载ngrok，解压；\" class=\"headerlink\" title=\"2. 下载ngrok，解压；\"></a>2. <a href=\"https://ngrok.com/download\" target=\"_blank\" rel=\"noopener\">下载ngrok</a>，解压；</h3><h3 id=\"3-启动\"><a href=\"#3-启动\" class=\"headerlink\" title=\"3. 启动\"></a>3. 启动</h3><h5 id=\"方式一\"><a href=\"#方式一\" class=\"headerlink\" title=\"方式一:\"></a>方式一:</h5><p>让本地的‘<a href=\"http://127.0.0.1:80’\" target=\"_blank\" rel=\"noopener\">http://127.0.0.1:80’</a> 可以让外网访问<br><figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">ngrok</span> <span class=\"string\">http</span> <span class=\"number\">80</span></span><br></pre></td></tr></table></figure></p>\n<p>ngrok会随机分配一个二级域名，可直接通过外网可通过<code>http://xxxx.tunnel.mobi</code>来访问本机的<code>http://127.0.0.1:80</code>网站</p>\n<h5 id=\"方式二：使用配置文件启动\"><a href=\"#方式二：使用配置文件启动\" class=\"headerlink\" title=\"方式二：使用配置文件启动:\"></a>方式二：使用配置文件启动:</h5><p>在<code>ngrok.exe</code>目录下执行命令（不带尖括号），生成配置文件（配置文件会在<code>C:\\Users\\用户名/.ngrok2/ngrok.yml</code>下「windows」）<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ngrok authtoken &lt;you authtoken&gt;</span><br></pre></td></tr></table></figure></p>\n<p>修改配置文件，可配置多个tunnel（注意，配置文件是yaml格式，冒号后面如果还有内容需要加空格）<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">authtoken:&lt;you authtoken&gt;</span><br><span class=\"line\">tunnels:</span><br><span class=\"line\">  # 自定义隧道名 </span><br><span class=\"line\">  iblogc:</span><br><span class=\"line\">    #本地服务端口 </span><br><span class=\"line\">    addr: 4000</span><br><span class=\"line\">    # 用于http/https里的身份认证</span><br><span class=\"line\">    #auth: &quot;username:password&quot;</span><br><span class=\"line\">    proto: http</span><br><span class=\"line\">    # 二级域名，如果运行提示重复，换一个就行</span><br><span class=\"line\">    subdomain: iblogc</span><br><span class=\"line\">  django:</span><br><span class=\"line\">    addr: 8000</span><br><span class=\"line\">    auth: &quot;abc:123456&quot;</span><br><span class=\"line\">    proto: http</span><br><span class=\"line\">    subdomain: django</span><br><span class=\"line\">  weixin:</span><br><span class=\"line\">    addr: 80</span><br><span class=\"line\">    proto: http</span><br><span class=\"line\">    subdomain: weixin</span><br></pre></td></tr></table></figure></p>\n<p>现在执行<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ngrok start iblogc</span><br></pre></td></tr></table></figure></p>\n<p>试试，如果你设置的的二级域名没有被占用的话，那么就会启动成功，否则请更换一个二级域重试。<br><code>http://iblogc.ngrok.io</code> <code>https://iblogc.ngrok.io</code> 协议均可以访问。<br>ngrok-start-iblogc.png)</p>\n<p>你也可以同时启动两个tunnel<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ngrok start iblogc django weixin</span><br></pre></td></tr></table></figure></p>\n<p>ngrok-start-iblogc-django-weixin.png)</p>\n<p>因为我的django tunnel配置文件里添加了<code>auth</code>配置所以访问<code>http://django.ngrok.io</code>需要输入用户名密码。<br>ngrok-auth.png)</p>\n<p>假设<code>weixin</code>就是我本地跑在80端口的微信项目，现在就可以在微信公众平台「开发者中心」可以使用<code>weixin.ngrok.com</code>进行配置了，所有发向此域名的请求都会转发到你的本地<code>127.0.0.1:80</code>上。</p>\n<h3 id=\"4-查看详细信息如果想查看详细的请求信息可以在浏览器里打开http-127-0-0-1-4040查看详细信息\"><a href=\"#4-查看详细信息如果想查看详细的请求信息可以在浏览器里打开http-127-0-0-1-4040查看详细信息\" class=\"headerlink\" title=\"4. 查看详细信息如果想查看详细的请求信息可以在浏览器里打开http://127.0.0.1:4040查看详细信息\"></a>4. 查看详细信息如果想查看详细的请求信息可以在浏览器里打开<code>http://127.0.0.1:4040</code>查看详细信息</h3><p>nrok-web-interface.png)</p>\n<h3 id=\"5-参考文档\"><a href=\"#5-参考文档\" class=\"headerlink\" title=\"5. 参考文档\"></a>5. 参考文档</h3><p>官方文档：<a href=\"https://ngrok.com/docs\" target=\"_blank\" rel=\"noopener\">https://ngrok.com/docs</a></p>\n","categories":[{"name":"程序猿","path":"api/categories/程序猿.json"}],"tags":[{"name":"微信公众号","path":"api/tags/微信公众号.json"},{"name":"端口","path":"api/tags/端口.json"},{"name":"ngrok","path":"api/tags/ngrok.json"},{"name":"内网穿透","path":"api/tags/内网穿透.json"}]}