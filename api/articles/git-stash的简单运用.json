{"title":"Git stash的简单运用","slug":"git-stash的简单运用","date":"2015-10-20T14:16:18.000Z","updated":"2020-01-17T07:56:06.503Z","comments":true,"path":"api/articles/git-stash的简单运用.json","excerpt":"当我们在分支上改代码改到一半时，突然项目发现了一个bug需要修复，这时需要切换到另一个分支进行修改，以前的做法可能是把工作区改到一半的代码先commit，然后切换分支修复bug，再切换回来继续写代码，但这样会生成很多不必要的提交，这时你就需要使用git stash命令。<br>","covers":null,"content":"<p>当我们在分支上改代码改到一半时，突然项目发现了一个bug需要修复，这时需要切换到另一个分支进行修改，以前的做法可能是把工作区改到一半的代码先commit，然后切换分支修复bug，再切换回来继续写代码，但这样会生成很多不必要的提交，这时你就需要使用<code>git stash</code>命令。<br><a id=\"more\"></a><br><code>git stash</code>命令可将工作区的改动存储git栈，运行<code>git stash</code>之后，可以再运行<code>git status -s</code>验证下发现目录和上交commit时是一致的，没有任何修改，这时你就可以切换到其它分支进行工作，当你完成工作后，再切换回来，使用<code>git stash pop</code>可以从Git栈中读取最近一次保存的内容，恢复到工作区。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git stash: 备份当前的工作区的内容，从最近的一次提交中读取相关内容，让工作区保证和上次提交的内容一致。同时，将当前的工作区内容保存到Git栈中。</span><br><span class=\"line\">git stash save &quot;message&quot;: 备份当前的工作区的内容，并添加备注信息</span><br><span class=\"line\">git stash list: 显示git栈内的所有备份，可以利用这个列表来决定从那个地方恢复。</span><br><span class=\"line\">git stash pop stash@&#123;0&#125;: 从git栈中读取并恢复工作区，然后删除对应的记录，默认恢复最新的（stash@&#123;0&#125;为最新）</span><br><span class=\"line\">git stash apply stash@&#123;0&#125;: 同git stash pop，但不会删除对应的记录</span><br><span class=\"line\">git stash drop: 删除最新的一个备份</span><br><span class=\"line\">git stash clear: 清空git栈。此时使用gitg等图形化工具会发现，原来stash的哪些节点都消失了。</span><br></pre></td></tr></table></figure>\n<h2 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h2><p><a href=\"http://www.tuicool.com/articles/rUBNBvI\" target=\"_blank\" rel=\"noopener\">http://www.tuicool.com/articles/rUBNBvI</a><br>及<code>git stash --help</code></p>\n","categories":[{"name":"程序猿","path":"api/categories/程序猿.json"}],"tags":[{"name":"Git","path":"api/tags/Git.json"}]}